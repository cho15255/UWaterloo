{"ts":1359561216718,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1359561237827,"patch":[[{"diffs":[[1,"#ifndef DYNAMIC_STACK_AS_ARRAY_H\r\n#define DYNAMIC_STACK_AS_ARRAY_H\r\n\r\n/*****************************************\r\n * UW User ID:  uwuserid\r\n * Submitted for ECE 250\r\n * Semester of Submission:  (Winter|Spring|Fall) 20NN\r\n *\r\n * By submitting this file, I affirm that\r\n * I am the author of all modifications to\r\n * the provided code.\r\n *****************************************/\r\n \r\n #include <iostream>\r\nusing namespace std;\r\n\r\n#include \"Exception.h\"\r\n#include \"Array.h\"\r\n\r\ntemplate <typename T>\r\nclass DynamicStackAsArray {\r\n    private:\r\n\t\t\r\n\t\tArray<T> *stack ; \r\n\t\tint ihead, count, initial_size, array_size;\r\n\r\n\tpublic:\r\n\t\tDynamicStackAsArray( int = 10 );\r\n\t\t~DynamicStackAsArray();\r\n\r\n\t\tT top() const;\r\n\t\tint size() const;\r\n\t\tbool empty() const;\r\n\t\tint capacity() const;\r\n\r\n\t\tvoid push( T const & );\r\n\t\tT pop();\r\n\t\tvoid clear();\r\n\t\tvoid print();\r\n\t\r\n        void stackResize(int ) ;\r\n};\r\n\r\ntemplate <typename T>\r\nDynamicStackAsArray<T>::DynamicStackAsArray( int n ):\r\ncount( 0 ),\r\ninitial_size( n ),\r\narray_size( n ) {            \r\n      \r\n\t   stack = new Array<T>(array_size);\r\n\t   // What initial value will you give to ihead ?\r\n}\r\n\r\ntemplate <typename T>\r\nDynamicStackAsArray<T>::~DynamicStackAsArray() {\r\n\t// Enter your implementation\r\n}\r\n\r\ntemplate <typename  T>\r\nT DynamicStackAsArray<T>::top() const {\r\n    \r\n   // Enter your implementation\r\n      \r\n}\r\n\r\ntemplate <typename T>\r\nint DynamicStackAsArray<T>::size() const {\r\n\t// Enter your implementation\r\n}\r\n\r\ntemplate <typename T>\r\nbool DynamicStackAsArray<T>::empty() const {\r\n\t// Enter your implementation\r\n}\r\n\r\ntemplate <typename T>\r\nint DynamicStackAsArray<T>::capacity() const {\r\n\t// Enter your implementation\r\n}\r\n\r\ntemplate <typename T>\r\nvoid DynamicStackAsArray<T>::push( T const &obj ) {\r\n     // Enter your implementation\r\n                \r\n}\r\n\r\ntemplate <typename T>\r\nT DynamicStackAsArray<T>::pop() {\r\n\t // Enter your implementation\r\n}\r\n\r\ntemplate <typename T>\r\nvoid DynamicStackAsArray<T>::clear() {\r\n     // Enter your implementation\r\n     \r\n     \r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n#endif"]],"start1":0,"start2":0,"length1":0,"length2":2045}]],"length":2045,"saved":false}
{"contributors":[],"silentsave":false,"ts":1359641164206,"patch":[[{"diffs":[[0,"D:  "],[-1,"uwuserid"],[1,"jh9cho "],[0,"\r\n *"]],"start1":126,"start2":126,"length1":16,"length2":15},{"diffs":[[0,"nter"],[-1,"|Spring|Fall"],[0,") 20"],[-1,"NN"],[1,"13"],[0,"\r\n *"]],"start1":196,"start2":196,"length1":26,"length2":14}]],"length":2032,"saved":false}
{"ts":1359641603093,"patch":[[{"diffs":[[0,"\t   "],[-1,"// What initial value will you give to ihead ?"],[1,"ihead = n-1;"],[0,"\r\n}\r"]],"start1":1072,"start2":1072,"length1":54,"length2":20}]],"length":1998,"saved":false}
{"ts":1359641779283,"patch":[[{"diffs":[[0,"{\r\n\t"],[-1,"// Enter your implementation"],[1,"delete [] stack;"],[0,"\r\n}\r"]],"start1":1165,"start2":1165,"length1":36,"length2":24},{"diffs":[[0,"\n   "],[-1,"// Enter your implementation"],[1,"if (count >= 0)\r\n   {\r\n       return stack->get(ihead);\r\n   }"],[0,"\r\n  "]],"start1":1262,"start2":1262,"length1":36,"length2":69}]],"length":2019,"saved":false}
{"ts":1359641822847,"patch":[[{"diffs":[[0,"  }\r\n   "],[-1,"   "],[1,"else\r\n   {\r\n       \r\n   }"],[0,"\r\n}\r\n\r\nt"]],"start1":1324,"start2":1324,"length1":19,"length2":41}]],"length":2041,"saved":false}
{"ts":1359641833888,"patch":[[{"diffs":[[0,"  {\r\n       "],[1,"throw underflow();"],[0,"\r\n   }\r\n}\r\n\r"]],"start1":1339,"start2":1339,"length1":24,"length2":42}]],"length":2059,"saved":false}
{"ts":1359641955025,"patch":[[{"diffs":[[0,"{\r\n\t"],[-1,"// Enter your implementation"],[1,"return array_size;"],[0,"\r\n}\r"]],"start1":1446,"start2":1446,"length1":36,"length2":26},{"diffs":[[0,"{\r\n\t"],[-1,"// Enter your implementation"],[1,"if (array_size == 0)\r\n    {\r\n        return true;\r\n    }\r\n    else \r\n    {\r\n        return false;\r\n    }"],[0,"\r\n}\r"]],"start1":1541,"start2":1541,"length1":36,"length2":112}]],"length":2125,"saved":false}
{"ts":1359641965652,"patch":[[{"diffs":[[0,"ze == 0)"],[-1,"\r\n    "],[0,"{\r\n     "]],"start1":1557,"start2":1557,"length1":22,"length2":16},{"diffs":[[0,"   }"],[-1,"\r\n    else \r\n   "],[1," else"],[0," {\r\n"]],"start1":1591,"start2":1591,"length1":24,"length2":13}]],"length":2108,"saved":false}
{"ts":1359641975575,"patch":[[{"diffs":[[0,"nt >= 0)"],[-1,"\r\n  "],[0," {\r\n    "]],"start1":1273,"start2":1273,"length1":20,"length2":16},{"diffs":[[0,"   }"],[-1,"\r\n  "],[0," else"],[-1,"\r\n  "],[0," {\r\n"]],"start1":1319,"start2":1319,"length1":21,"length2":13},{"diffs":[[0,"ze == 0)"],[1," "],[0,"{\r\n     "]],"start1":1545,"start2":1545,"length1":16,"length2":17}]],"length":2097,"saved":false}
{"ts":1359642295085,"patch":[[{"diffs":[[0,"\treturn "],[-1,"array"],[1,"initial"],[0,"_size;\r\n"]],"start1":1437,"start2":1437,"length1":21,"length2":23},{"diffs":[[0,"{\r\n\t"],[-1,"// Enter your implementation"],[1,"return array_size;"],[0,"\r\n}\r"]],"start1":1698,"start2":1698,"length1":36,"length2":26}]],"length":2089,"saved":false}
{"ts":1359642836586,"patch":[[{"diffs":[[0,"    "],[-1,"// Enter your implementation\r\n           "],[1,"if (initial_size >= array_size) {\r\n         stack->resize(array_size*2)\r\n"],[0,"     "],[1,"}"],[0,"\r\n}\r"]],"start1":1804,"start2":1804,"length1":54,"length2":87}]],"length":2122,"saved":false}
{"ts":1359642885784,"patch":[[{"diffs":[[0,"ize*2)\r\n"],[1,"     } else {\r\n         initial_size += 1;\r\n"],[0,"     }\r\n"]],"start1":1873,"start2":1873,"length1":16,"length2":60}]],"length":2166,"saved":false}
{"ts":1359642890701,"patch":[[{"diffs":[[0," += 1;\r\n"],[1,"         ihead += 1;\r\n"],[0,"     }\r\n"]],"start1":1917,"start2":1917,"length1":16,"length2":38}]],"length":2188,"saved":false}
{"ts":1359642906806,"patch":[[{"diffs":[[0,"\n     } "],[-1,"else {"],[0,"\r\n     "],[1,"\r\n "],[0,"    init"]],"start1":1880,"start2":1880,"length1":29,"length2":26},{"diffs":[[0,";\r\n     "],[-1,"  "],[-1,"  "],[0,"ihead +="]],"start1":1919,"start2":1919,"length1":20,"length2":16},{"diffs":[[0,"1;\r\n"],[-1,"     }\r\n"],[0,"}\r\n\r"]],"start1":1936,"start2":1936,"length1":16,"length2":8}]],"length":2173,"saved":false}
{"ts":1359643071877,"patch":[[{"diffs":[[0,"d = "],[-1,"n-1"],[1,"count"],[0,";\r\n}"]],"start1":1080,"start2":1080,"length1":11,"length2":13}]],"length":2175,"saved":false}
{"ts":1359643095759,"patch":[[{"diffs":[[0," = count"],[1,"-1"],[0,";\r\n}\r\n\r\n"]],"start1":1081,"start2":1081,"length1":16,"length2":18}]],"length":2177,"saved":false}
{"ts":1359643209600,"patch":[[{"diffs":[[0,"    if ("],[1,"count >= "],[0,"initial_"]],"start1":1808,"start2":1808,"length1":16,"length2":25},{"diffs":[[0,"size"],[-1," >= array_size) {"],[1,") {\r\n         array_size = initial_size * 2;"],[0,"\r\n  "]],"start1":1833,"start2":1833,"length1":25,"length2":52},{"diffs":[[0,"size"],[-1,"*2"],[0,")"],[1,";"],[0,"\r\n  "]],"start1":1912,"start2":1912,"length1":11,"length2":10}]],"length":2212,"saved":false}
{"ts":1359643216230,"patch":[[{"diffs":[[0,"  \r\n"],[-1,"     initial_size += 1;\r\n"],[0,"    "]],"start1":1932,"start2":1932,"length1":33,"length2":8}]],"length":2187,"saved":false}
{"ts":1359643239542,"patch":[[{"diffs":[[0,"ihead = "],[-1,"count"],[0,"-1;\r\n}\r\n"]],"start1":1076,"start2":1076,"length1":21,"length2":16}]],"length":2182,"saved":false}
{"ts":1359643242408,"patch":[[{"diffs":[[0,"ihead = "],[1,"count"],[0,"-1;\r\n}\r\n"]],"start1":1076,"start2":1076,"length1":16,"length2":21}]],"length":2187,"saved":false}
{"ts":1359643252202,"patch":[[{"diffs":[[0,"ihead = "],[-1,"count"],[0,"-1;\r\n}\r\n"]],"start1":1076,"start2":1076,"length1":21,"length2":16}]],"length":2182,"saved":false}
{"ts":1359643258769,"patch":[[{"diffs":[[0," } \r\n     \r\n"],[1,"     count += 1;\r\n"],[0,"     ihead +"]],"start1":1919,"start2":1919,"length1":24,"length2":42}]],"length":2200,"saved":false}
{"ts":1359643274769,"patch":[[{"diffs":[[0,"ihead = "],[1,"count"],[0,"-1;\r\n}\r\n"]],"start1":1076,"start2":1076,"length1":16,"length2":21}]],"length":2205,"saved":false}
{"ts":1359643281424,"patch":[[{"diffs":[[0,"  ihead "],[-1,"+"],[0,"="],[1," count -"],[0," 1;\r\n}\r\n"]],"start1":1957,"start2":1957,"length1":18,"length2":25}]],"length":2212,"saved":false}
{"ts":1359643284810,"patch":[[{"diffs":[[0,"ount"],[-1," - "],[1,"-"],[0,"1;\r\n"]],"start1":1968,"start2":1968,"length1":11,"length2":9}]],"length":2210,"saved":false}
{"ts":1359643294442,"patch":[[{"diffs":[[0,"\r\n     }"],[-1," "],[0,"\r\n     \r"]],"start1":1918,"start2":1918,"length1":17,"length2":16}]],"length":2209,"saved":false}
{"ts":1359643367737,"patch":[[{"diffs":[[0,"\r\n\t "],[-1,"// Enter your implementation"],[1,"if (array_size > initial_size && count <= array_size/4)"],[0,"\r\n}\r"]],"start1":2037,"start2":2037,"length1":36,"length2":63}]],"length":2236,"saved":false}
{"ts":1359643374147,"patch":[[{"diffs":[[0,"_size/4)"],[1," {\r\n         \r\n\t }"],[0,"\r\n}\r\n\r\nt"]],"start1":2088,"start2":2088,"length1":16,"length2":34}]],"length":2254,"saved":false}
{"ts":1359643400250,"patch":[[{"diffs":[[0,"{\r\n         "],[1,"array_size /= 2;"],[0,"\r\n\t }\r\n}\r\n\r\n"]],"start1":2097,"start2":2097,"length1":24,"length2":40}]],"length":2270,"saved":false}
{"ts":1359643421526,"patch":[[{"diffs":[[0," /= 2;\r\n"],[1,"         stack->resize(array_size);\r\n"],[0,"\t }\r\n}\r\n"]],"start1":2119,"start2":2119,"length1":16,"length2":53}]],"length":2307,"saved":false}
{"ts":1359643425245,"patch":[[{"diffs":[[0,"e);\r\n\t }"],[1," "],[0,"\r\n}\r\n\r\nt"]],"start1":2159,"start2":2159,"length1":16,"length2":17}]],"length":2308,"saved":false}
{"ts":1359643429012,"patch":[[{"diffs":[[0,"e);\r\n\t }"],[1,"\r\n    "],[0," \r\n}\r\n\r\n"]],"start1":2159,"start2":2159,"length1":16,"length2":22}]],"length":2314,"saved":false}
{"ts":1359643439002,"patch":[[{"diffs":[[0,"\t }\r\n     \r\n"],[1,"     \r\n"],[0,"}\r\n\r\ntemplat"]],"start1":2164,"start2":2164,"length1":24,"length2":31}]],"length":2321,"saved":false}
{"ts":1359643460168,"patch":[[{"diffs":[[0,"() {\r\n\t "],[1,"\r\n     \r\n     "],[0,"if (arra"]],"start1":2033,"start2":2033,"length1":16,"length2":30},{"diffs":[[0,";\r\n\t }\r\n"],[-1,"     \r\n     \r\n"],[0,"}\r\n\r\ntem"]],"start1":2175,"start2":2175,"length1":30,"length2":16}]],"length":2321,"saved":false}
{"ts":1359643769017,"patch":[[{"diffs":[[0,"() {\r\n\t "],[1,"top()"],[0,"\r\n     \r"]],"start1":2033,"start2":2033,"length1":16,"length2":21}]],"length":2326,"saved":false}
{"ts":1359643774917,"patch":[[{"diffs":[[0,"() {\r\n\t "],[-1,"top()"],[0,"\r\n     \r"]],"start1":2033,"start2":2033,"length1":21,"length2":16}]],"length":2321,"saved":false}
{"ts":1359643787093,"patch":[[{"diffs":[[0,"() {\r\n\t "],[1,"T temp = top();"],[0,"\r\n     \r"]],"start1":2033,"start2":2033,"length1":16,"length2":31}]],"length":2336,"saved":false}
{"ts":1359643793563,"patch":[[{"diffs":[[0,"ize);\r\n\t }\r\n"],[1,"     \r\n     return T;\r\n"],[0,"}\r\n\r\ntemplat"]],"start1":2186,"start2":2186,"length1":24,"length2":47}]],"length":2359,"saved":false}
{"ts":1359643795074,"patch":[[{"diffs":[[0," return "],[-1,"T"],[1,"temp"],[0,";\r\n}\r\n\r\n"]],"start1":2209,"start2":2209,"length1":17,"length2":20}]],"length":2362,"saved":false}
{"ts":1359643800741,"patch":[[{"diffs":[[0,"    "],[-1,"// Enter your implementation"],[0,"\r\n  "]],"start1":2293,"start2":2293,"length1":36,"length2":8}]],"length":2334,"saved":false}
{"ts":1359643850577,"patch":[[{"diffs":[[0,"   \r\n   "],[-1,""],[0,""],[1," "],[0,"if (coun"]],"start1":1262,"start2":1262,"length1":16,"length2":17},{"diffs":[[0,"d);\r\n   "],[-1,""],[0,""],[1," "],[0,"} else {"]],"start1":1319,"start2":1319,"length1":16,"length2":17},{"diffs":[[0,"();\r\n   "],[-1,""],[0,""],[1," "],[0,"}\r\n}\r\n\r\n"]],"start1":1360,"start2":1360,"length1":16,"length2":17},{"diffs":[[0,"bj ) {\r\n    "],[-1," "],[0,"if (count >="]],"start1":1802,"start2":1802,"length1":25,"length2":24},{"diffs":[[0,"al_size) {\r\n"],[-1," "],[0,"        arra"]],"start1":1832,"start2":1832,"length1":25,"length2":24},{"diffs":[[0,"_size * 2;\r\n"],[-1," "],[0,"        stac"]],"start1":1872,"start2":1872,"length1":25,"length2":24},{"diffs":[[0,");\r\n    "],[-1," "],[0,"}\r\n     "]],"start1":1916,"start2":1916,"length1":17,"length2":16},{"diffs":[[0,"  }\r\n     \r\n"],[-1," "],[0,"    count +="]],"start1":1922,"start2":1922,"length1":25,"length2":24},{"diffs":[[0," += 1;\r\n"],[-1," "],[0,"    ihea"]],"start1":1943,"start2":1943,"length1":17,"length2":16},{"diffs":[[0,"op() {\r\n"],[-1,"\t"],[0," "],[1,"   \r\n    \r\n\t"],[0,"T temp ="]],"start1":2028,"start2":2028,"length1":18,"length2":29},{"diffs":[[0,"();\r\n     \r\n"],[-1," "],[0,"    if (arra"]],"start1":2061,"start2":2061,"length1":25,"length2":24},{"diffs":[[0,"_size/4) {\r\n"],[-1," "],[0,"        arra"]],"start1":2124,"start2":2124,"length1":25,"length2":24},{"diffs":[[0,"2;\r\n        "],[-1," "],[0,"stack->resiz"]],"start1":2158,"start2":2158,"length1":25,"length2":24},{"diffs":[[0,"ize);\r\n\t"],[-1," "],[0,"}\r\n     "]],"start1":2191,"start2":2191,"length1":17,"length2":16},{"diffs":[[0,"\n\t}\r\n     \r\n"],[-1," "],[0,"    return t"]],"start1":2197,"start2":2197,"length1":25,"length2":24}]],"length":2337,"saved":false}
{"ts":1359643860923,"patch":[[{"diffs":[[0,"    "],[-1," \r\n     \r\n     "],[0,"\r\n}\r"]],"start1":2295,"start2":2295,"length1":23,"length2":8}]],"length":2322,"saved":false}
{"ts":1359643891226,"patch":[[{"diffs":[[0,"op() {\r\n    "],[1,"if (count <= 0) {\r\n        throw underflow();\r\n    }"],[0,"\r\n    \r\n\tT t"]],"start1":2028,"start2":2028,"length1":24,"length2":76}]],"length":2374,"saved":false}
{"ts":1359643898459,"patch":[[{"diffs":[[0," throw underflow"],[-1,"()"],[0,";\r\n    }\r\n    \r\n"]],"start1":2066,"start2":2066,"length1":34,"length2":32}]],"length":2372,"saved":false}
{"ts":1359643936777,"patch":[[{"diffs":[[0,":clear() {\r\n"],[1,"    stack->resize(initial_size);\r\n"],[0,"    \r\n}\r\n\r\n\r"]],"start1":2333,"start2":2333,"length1":24,"length2":58}]],"length":2406,"saved":false}
{"ts":1359643963409,"patch":[[{"diffs":[[0,":clear() {\r\n"],[1,"    \r\n"],[0,"    stack->r"]],"start1":2333,"start2":2333,"length1":24,"length2":30}]],"length":2412,"saved":false}
{"ts":1359643992748,"patch":[[{"diffs":[[0,"ar() {\r\n    "],[1,"Array<T> *newStack"],[0,"\r\n    stack-"]],"start1":2337,"start2":2337,"length1":24,"length2":42}]],"length":2430,"saved":false}
{"ts":1359643994843,"patch":[[{"diffs":[[0,"newStack"],[1,";"],[0,"\r\n    st"]],"start1":2359,"start2":2359,"length1":16,"length2":17}]],"length":2431,"saved":false}
{"ts":1359644001289,"patch":[[{"diffs":[[0,"newStack"],[-1,";"],[1," = new "],[0,"\r\n    st"]],"start1":2359,"start2":2359,"length1":17,"length2":23}]],"length":2437,"saved":false}
{"ts":1359644035102,"patch":[[{"diffs":[[0,"k = new "],[1,"Array<T> (initial_size);"],[0,"\r\n    st"]],"start1":2366,"start2":2366,"length1":16,"length2":40}]],"length":2461,"saved":false}
{"ts":1359644060333,"patch":[[{"diffs":[[0,"ial_size);\r\n"],[1,"    delete [] stack;\r\n"],[0,"    stack->r"]],"start1":2388,"start2":2388,"length1":24,"length2":46}]],"length":2483,"saved":false}
{"ts":1359644081758,"patch":[[{"diffs":[[0,"tack"],[-1,"->resize(initial_size)"],[1," = newStack"],[0,";\r\n "]],"start1":2427,"start2":2427,"length1":30,"length2":19}]],"length":2472,"saved":false}
{"ts":1359644082806,"patch":[[{"diffs":[[0,"Stack;\r\n"],[-1,"    \r\n"],[0,"}\r\n\r\n\r\n\r"]],"start1":2437,"start2":2437,"length1":22,"length2":16}]],"length":2466,"saved":false}
{"ts":1359644085875,"patch":[[{"diffs":[[0,";\r\n}\r\n\r\n"],[-1,"\r\n\r\n\r\n\r\n\r\n"],[0,"#endif"]],"start1":2442,"start2":2442,"length1":24,"length2":14}]],"length":2456,"saved":false}
