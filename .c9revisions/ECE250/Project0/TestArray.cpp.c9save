{"ts":1359560207043,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"#include <iostream>\n\nusing namespace std;\n\n#include \"Array.h\"\n#include \"Exception.h\"\n\nint main()\n{\n\tcout << \"Array testing\" << endl;\n\tArray a1(4);\n\t\n\tcout << \"\\nTest: set(n,value) - sets value of array with index n\" << endl;\n\n\ta1.set(0, 1);\n\ta1.set(1, 21);\n\ta1.set(2, 200);\n\ta1.set(3, 3);\n\n\tcout << \"\\nTest: size() - outputs first testing array, initialized with size of 4\"<< endl;\n\tcout << a1.size() << endl;\n\tcout << \"\\nTest: get(n) - get the content from index 2\" << endl;\n\tcout << a1.get(2) << endl;\n\n\ta1.resize(7);\n\tcout << \"\\nTest: resize(n) n > array_size - testing array a1 is resized to 7\" << endl;\n\tcout << a1.size() << endl;\n\tcout << a1.get(5) << endl;\n\n\ta1.resize(7);\n\tcout << \"\\nTest: resize(n) n = array_size - resizing array a1 to 7 again\" << endl;\n\tcout << a1.size() << endl;\n\ta1.resize(2);\n\tcout << \"\\nTest: resize(n) n < array_size - resizing array a1 to 2 \\n\" << endl;\n\tcout << a1.size() << endl;\n\n\ttry {\n\t\ta1.get(5);\n\t} catch (ArrayBoundsException e) {\n\t\tcout << \"\\nException! (get) \" << endl;\n\t}\n\n\ttry {\n\t\ta1.set(6, 20);\n\t} catch (ArrayBoundsException e) {\n\t\tcout << \"Exception! (set) \" << endl;\n\t}\n\n\tcout << \"\\nTest: get(n) with n > array_size - throws exception\" << endl;\n\n\tcout << \"\\nBONUS: print() method for printing all the values inside a1 array\" << endl;\n\ta1.print();\n\n\tcin.get();\n}\n"]],"start1":0,"start2":0,"length1":0,"length2":1312}]],"length":1312}
