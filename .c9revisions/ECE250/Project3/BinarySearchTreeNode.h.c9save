{"ts":1363701036620,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1363701037735,"patch":[[{"diffs":[[1,"#ifndef NODE_H\r\n#define NODE_H\r\n\r\n/*****************************************\r\n * UW User ID:  uwuserid\r\n * Submitted for ECE 250\r\n * Department of Electrical and Computer Engineering\r\n * University of Waterloo\r\n * Calender Term of Submission:  (Winter|Spring|Fall) 20NN\r\n *\r\n * By submitting this file, I affirm that\r\n * I am the author of all modifications to\r\n * the provided code.\r\n *****************************************/\r\n\r\n#include \"ece250.h\"\r\n\r\n\r\ntemplate <typename Type>\r\nclass BinarySearchTree;\r\n\r\n\r\ntemplate <typename Type>\r\nclass BinarySearchTreeNode{\r\n    private:\r\n\t\tType       x_value;\t\r\n        \r\n\t\r\n\t\tBinarySearchTreeNode<Type> *right;\r\n\t\tBinarySearchTreeNode<Type> *left;\r\n\t\t\r\n\t\t\r\n\r\n\tpublic:\r\n           \r\n         \r\n  \r\n\t\tBinarySearchTreeNode<Type>( const Type  & = Type());\r\n\r\n\t\tType retrieve() const;\r\n\t\r\n\r\n\t\tBinarySearchTreeNode *get_right() const;\r\n\t\tBinarySearchTreeNode *get_left() const;\r\n\t\t\r\n\r\n\t\tType min() const;\r\n\t\r\n\t\tType max() const;\r\n\r\n\t\tType sum() const;\r\n\t\t\r\n\r\n\t\tbool member( const Type & ) const;\r\n\r\n\t\tbool insert( const Type & );\r\n\t\tvoid clear();\r\n\r\n\tfriend class BinarySearchTree<Type>;\r\n};\r\n\r\n\r\ntemplate <typename Type>\r\nBinarySearchTreeNode<Type>::BinarySearchTreeNode( const Type  &x ):\r\nx_value( x ),  \r\nright( 0 ),\r\nleft( 0 )\r\n{\r\n\t// empty constructor\r\n}\r\n\r\n\r\n\r\n\r\n\r\ntemplate <typename Type>\r\nType BinarySearchTreeNode<Type>::retrieve() const {\r\n\treturn x_value;\r\n}\r\n\r\n\r\n\r\ntemplate <typename Type>\r\nBinarySearchTreeNode<Type> *BinarySearchTreeNode<Type>::get_left() const {\r\n\treturn left;\r\n}\r\n\r\ntemplate <typename Type>\r\nBinarySearchTreeNode<Type> *BinarySearchTreeNode<Type>::get_right() const {\r\n\treturn right;\r\n}\r\n\r\n\r\ntemplate <typename Type>\r\nType BinarySearchTreeNode<Type>::min() const {\r\n\t// you may use std::min\r\n\treturn Type();\r\n}\r\n\r\n\r\n\r\ntemplate <typename Type>\r\nType BinarySearchTreeNode<Type>::max() const {\r\n\t// you may use std::max\r\n\treturn Type();\r\n}\r\n\r\n\r\n\r\ntemplate <typename Type>\r\nType BinarySearchTreeNode<Type>::sum() const {\r\n\tif ( this == 0 ) {\r\n\t\t// hint...\r\n\t\treturn 0;\r\n\t} else {\r\n\t\treturn 0;\r\n\t}\r\n}\r\n\r\n\r\n\r\ntemplate <typename Type>\r\nbool BinarySearchTreeNode<Type>::member( const Type &x) const {\r\n\tif ( this == 0 ) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn false;\r\n}\r\n\r\ntemplate <typename Type>\r\nbool BinarySearchTreeNode<Type>::insert(  const Type &x ) {\r\n\treturn false;\r\n}\r\n\r\ntemplate <typename Type>\r\nvoid BinarySearchTreeNode<Type>::clear() {\r\n}\r\n\r\n// Is an error showing up in ece250.h or elsewhere?\r\n// Did you forget a closing '}' ?\r\n\r\n#endif"]],"start1":0,"start2":0,"length1":0,"length2":2510}]],"length":2510,"saved":false}
{"ts":1363702271274,"patch":[[{"diffs":[[0,"{\r\n\t"],[-1,"// you may use std::min"],[1,"if (get_left() == null) {\r\n        return x_value;\r\n\t} else {\r\n        return left->min;   \r\n\t}\r\n    "],[0,"\r\n\tr"]],"start1":1735,"start2":1735,"length1":31,"length2":109},{"diffs":[[0,"\r\n    \r\n\treturn "],[-1,"Type()"],[1,"x_value"],[0,";\r\n}\r\n\r\n\r\n\r\ntemp"]],"start1":1834,"start2":1834,"length1":38,"length2":39}]],"length":2589,"saved":false}
{"ts":1363702321635,"patch":[[{"diffs":[[0,"eft->min"],[1,"()"],[0,";   \r\n\t}"]],"start1":1818,"start2":1818,"length1":16,"length2":18},{"diffs":[[0,"\t}\r\n"],[-1,"    \r\n\treturn x_value;\r\n"],[0,"}\r\n\r"]],"start1":1834,"start2":1834,"length1":32,"length2":8}]],"length":2567,"saved":false}
{"ts":1363702458996,"patch":[[{"diffs":[[0,"->min();"],[-1,"   "],[0,"\r\n"],[1,""],[0,"\t}\r\n}\r\n\r"]],"start1":1821,"start2":1821,"length1":21,"length2":18},{"diffs":[[0,"{\r\n\t"],[-1,"// you may use std::max"],[1,"if (get_right() == null) {\r\n        return x_value;   \r\n\t} else {\r\n        return right->max();   \r\n\t}"],[0,"\r\n\tr"]],"start1":1915,"start2":1915,"length1":31,"length2":110}]],"length":2643,"saved":false}
{"ts":1363702463122,"patch":[[{"diffs":[[0,"x_value;"],[-1,"   "],[0,"\r\n\t} els"]],"start1":1962,"start2":1962,"length1":19,"length2":16}]],"length":2640,"saved":false}
{"ts":1363702465180,"patch":[[{"diffs":[[0,"->max();"],[-1,"   "],[0,"\r\n\t}\r\n\tr"]],"start1":2003,"start2":2003,"length1":19,"length2":16}]],"length":2637,"saved":false}
{"ts":1363702744094,"patch":[[{"diffs":[[0," {\r\n"],[-1,"\t\t// hint...\r\n"],[0,"\t\tre"]],"start1":2134,"start2":2134,"length1":22,"length2":8}]],"length":2623,"saved":false}
{"ts":1363702776523,"patch":[[{"diffs":[[0,"\n\t} else {\r\n"],[-1,"\t\treturn 0;"],[1,"        "],[0,"\r\n\t}\r\n}\r\n\r\n\r"]],"start1":2150,"start2":2150,"length1":35,"length2":32}]],"length":2620,"saved":false}
{"ts":1363702788738,"patch":[[{"diffs":[[0,"\t}\r\n"],[-1,"\treturn Type();\r\n"],[0,"}\r\n\r"]],"start1":2013,"start2":2013,"length1":25,"length2":8}]],"length":2603,"saved":false}
{"ts":1363702803215,"patch":[[{"diffs":[[0,"t_left() == "],[-1,"null"],[1,"0"],[0,") {\r\n       "]],"start1":1745,"start2":1745,"length1":28,"length2":25},{"diffs":[[0," == "],[-1,"null"],[1,"0"],[0,") {\r"]],"start1":1931,"start2":1931,"length1":12,"length2":9}]],"length":2597,"saved":false}
{"ts":1363703285588,"patch":[[{"diffs":[[0,"\n        return "],[-1,"x_value"],[1,"retrieve()"],[0,";\r\n\t} else {\r\n  "]],"start1":1762,"start2":1762,"length1":39,"length2":42},{"diffs":[[0," return "],[-1,"x_value"],[1,"retrieve()"],[0,";\r\n\t} el"]],"start1":1951,"start2":1951,"length1":23,"length2":26}]],"length":2603,"saved":false}
{"ts":1363703441024,"patch":[[{"diffs":[[0,"        "],[1,"return (retrieve() + left->sum() + right->sum())"],[0,"\r\n\t}\r\n}\r"]],"start1":2145,"start2":2145,"length1":16,"length2":64}]],"length":2651,"saved":false}
{"ts":1363703445591,"patch":[[{"diffs":[[0,"->sum())"],[1,";"],[0,"\r\n\t}\r\n}\r"]],"start1":2193,"start2":2193,"length1":16,"length2":17}]],"length":2652,"saved":false}
{"ts":1363703558884,"patch":[[{"diffs":[[0,"lse;\r\n\t}"],[-1,"\r\n"],[1," else if (this == x) {\r\n        \r\n\t}"],[0,"\r\n\tretur"]],"start1":2340,"start2":2340,"length1":18,"length2":52}]],"length":2686,"saved":false}
{"ts":1363704164075,"patch":[[{"diffs":[[0,"alse;\r\n\t"],[-1,"} else "],[0,"if (this"]],"start1":2339,"start2":2339,"length1":23,"length2":16},{"diffs":[[0,"is == x)"],[-1," {"],[0,"\r\n      "]],"start1":2353,"start2":2353,"length1":18,"length2":16},{"diffs":[[0,"    "],[-1,"\r\n\t}\r\n\treturn false;"],[1,"return true;\r\n\t}\r\n    if (){\r\n        \r\n\t}"],[0,"\r\n}\r"]],"start1":2367,"start2":2367,"length1":28,"length2":50}]],"length":2699,"saved":false}
{"ts":1363704166688,"patch":[[{"diffs":[[0,"   if ()"],[1," "],[0,"{\r\n     "]],"start1":2390,"start2":2390,"length1":16,"length2":17}]],"length":2700,"saved":false}
{"ts":1363704172380,"patch":[[{"diffs":[[0,"rue;\r\n\t}"],[-1,"\r\n   "],[0," if () {"]],"start1":2379,"start2":2379,"length1":21,"length2":16}]],"length":2695,"saved":false}
{"ts":1363704173960,"patch":[[{"diffs":[[0,"ue;\r\n\t} "],[1,"\r\n    \r\n    "],[0,"if () {\r"]],"start1":2380,"start2":2380,"length1":16,"length2":28}]],"length":2707,"saved":false}
{"ts":1363704737187,"patch":[[{"diffs":[[0,"false;\r\n"],[1,"    }\r\n    \r\n"],[0,"\tif (thi"]],"start1":2338,"start2":2338,"length1":16,"length2":29},{"diffs":[[0,"is == x)"],[1," {"],[0,"\r\n      "]],"start1":2366,"start2":2366,"length1":16,"length2":18}]],"length":2722,"saved":false}
{"ts":1363704909737,"patch":[[{"diffs":[[0,"    if ("],[1,"x > retrieve()"],[0,") {\r\n   "]],"start1":2411,"start2":2411,"length1":16,"length2":30}]],"length":2736,"saved":false}
{"ts":1363704941629,"patch":[[{"diffs":[[0,"        "],[1,"return right->member;\r\n\t} else {\r\n        return left->member;"],[0,"\r\n\t}\r\n}\r"]],"start1":2438,"start2":2438,"length1":16,"length2":78}]],"length":2798,"saved":false}
{"ts":1363704945914,"patch":[[{"diffs":[[0,"ight->member"],[1,"(x)"],[0,";\r\n\t} else {"]],"start1":2454,"start2":2454,"length1":24,"length2":27},{"diffs":[[0,"->member"],[1,"(x)"],[0,";\r\n\t}\r\n}"]],"start1":2502,"start2":2502,"length1":16,"length2":19}]],"length":2804,"saved":false}
{"ts":1363705105779,"patch":[[{"diffs":[[0," \r\n\tif ("],[-1,"this"],[1,"retrieve"],[0," == x) {"]],"start1":2356,"start2":2356,"length1":20,"length2":24}]],"length":2808,"saved":false}
{"ts":1363705110246,"patch":[[{"diffs":[[0,"retrieve"],[1,"()"],[0," == x) {"]],"start1":2364,"start2":2364,"length1":16,"length2":18}]],"length":2810,"saved":false}
{"contributors":[],"silentsave":false,"ts":1363870178731,"patch":[[{"diffs":[[0,"nst {\r\n\tif ("],[1,"this->"],[0,"get_right() "]],"start1":1911,"start2":1911,"length1":24,"length2":30}]],"length":2816,"saved":false}
{"ts":1363870196363,"patch":[[{"diffs":[[0,"{\r\n\tif ("],[1,"this->"],[0,"get_left"]],"start1":1735,"start2":1735,"length1":16,"length2":22}]],"length":2822,"saved":false}
{"ts":1363870861579,"patch":[[{"diffs":[[0,"\n    }\r\n"],[-1,"    \r\n"],[0,"\tif (ret"]],"start1":2357,"start2":2357,"length1":22,"length2":16}]],"length":2816,"saved":false}
{"ts":1363870912094,"patch":[[{"diffs":[[0,"\treturn "],[-1,"x_value"],[1,"this->retrieve()"],[0,";\r\n}\r\n\r\n"]],"start1":1389,"start2":1389,"length1":23,"length2":32}]],"length":2825,"saved":false}
{"ts":1363870957921,"patch":[[{"diffs":[[0," return "],[1,"this->get_"],[0,"left"],[1,"()"],[0,"->min();"]],"start1":1824,"start2":1824,"length1":20,"length2":32},{"diffs":[[0," return "],[1,"this->get_"],[0,"right"],[1,"()"],[0,"->max();"]],"start1":2023,"start2":2023,"length1":21,"length2":33}]],"length":2849,"saved":false}
{"ts":1363870982664,"patch":[[{"diffs":[[0,"eve() + "],[1,"this->get_"],[0,"left"],[1,"()"],[0,"->sum() "]],"start1":2211,"start2":2211,"length1":20,"length2":32},{"diffs":[[0,"sum() + "],[1,"this->get_"],[0,"right"],[1,"()"],[0,"->sum())"]],"start1":2237,"start2":2237,"length1":21,"length2":33}]],"length":2873,"saved":false}
{"ts":1363870992662,"patch":[[{"diffs":[[0,"return ("],[1,"this->"],[0,"retrieve"]],"start1":2198,"start2":2198,"length1":16,"length2":22},{"diffs":[[0,"()->sum() + "],[1,"\r\n                "],[0,"this->get_ri"]],"start1":2239,"start2":2239,"length1":24,"length2":42}]],"length":2897,"saved":false}
{"ts":1363870998438,"patch":[[{"diffs":[[0,"}\r\n\tif ("],[1,"this->"],[0,"retrieve"]],"start1":2443,"start2":2443,"length1":16,"length2":22}]],"length":2903,"saved":false}
{"ts":1363871022753,"patch":[[{"diffs":[[0,"  if (x "],[1,"< this-"],[0,">"],[-1," "],[0,"retrieve"]],"start1":2512,"start2":2512,"length1":18,"length2":24},{"diffs":[[0," return "],[-1,"right"],[1,"this->get_left()"],[0,"->member"]],"start1":2550,"start2":2550,"length1":21,"length2":32},{"diffs":[[0," return "],[-1,"left"],[1,"this->get_right()"],[0,"->member"]],"start1":2606,"start2":2606,"length1":20,"length2":33}]],"length":2933,"saved":false}
{"ts":1363871682961,"patch":[[{"diffs":[[0,"r\r\n}\r\n\r\n"],[-1,"\r\n\r\n\r\n\r\n"],[0,"template"]],"start1":1294,"start2":1294,"length1":24,"length2":16},{"diffs":[[0,"ight;\r\n}\r\n\r\n"],[-1,"\r\n"],[0,"template <ty"]],"start1":1651,"start2":1651,"length1":26,"length2":24},{"diffs":[[0,"in();\r\n\t}\r\n}\r\n\r\n"],[-1,"\r\n\r\n"],[0,"template <typena"]],"start1":1841,"start2":1841,"length1":36,"length2":32},{"diffs":[[0,"ax();\r\n\t}\r\n}\r\n\r\n"],[-1,"\r\n\r\n"],[0,"template <typena"]],"start1":2037,"start2":2037,"length1":36,"length2":32},{"diffs":[[0,");\r\n\t}\r\n"],[1,""],[0,"}\r\n\r\n"],[-1,"\r\n\r\n"],[0,"template"]],"start1":2275,"start2":2275,"length1":25,"length2":21}]],"length":2911,"saved":false}
{"ts":1363871703768,"patch":[[{"diffs":[[0,"ype &x ) {\r\n"],[1,"    \r\n"],[0,"\treturn fals"]],"start1":2707,"start2":2707,"length1":24,"length2":30}]],"length":2917,"saved":false}
{"ts":1363871779752,"patch":[[{"diffs":[[0," {\r\n    "],[1,"if (this->retrieve() == x) {\r\n        return false;\r\n    }"],[0,"\r\n\tretur"]],"start1":2715,"start2":2715,"length1":16,"length2":74}]],"length":2975,"saved":false}
{"ts":1363871783710,"patch":[[{"diffs":[[0,"\n    }\r\n"],[-1,"\treturn false;\r\n"],[0,"}\r\n\r\ntem"]],"start1":2775,"start2":2775,"length1":32,"length2":16}]],"length":2959,"saved":false}
{"ts":1363871794977,"patch":[[{"diffs":[[0,"urn false;\r\n"],[1,"    } else {\r\n        \r\n"],[0,"    }\r\n}\r\n\r\n"]],"start1":2764,"start2":2764,"length1":24,"length2":48}]],"length":2983,"saved":false}
{"ts":1363871803751,"patch":[[{"diffs":[[0," {\r\n        "],[1,"if ()"],[0,"\r\n    }\r\n}\r\n"]],"start1":2786,"start2":2786,"length1":24,"length2":29}]],"length":2988,"saved":false}
{"ts":1363871943080,"patch":[[{"diffs":[[0,"    if ("],[1,"x < this->retrieve()"],[0,")\r\n    }"]],"start1":2794,"start2":2794,"length1":16,"length2":36}]],"length":3008,"saved":false}
{"ts":1363871968550,"patch":[[{"diffs":[[0,"rieve())"],[1," {\r\n            this->get_left()->insert();\r\n        }"],[0,"\r\n    }\r"]],"start1":2815,"start2":2815,"length1":16,"length2":70}]],"length":3062,"saved":false}
{"ts":1363871982606,"patch":[[{"diffs":[[0,"ert();\r\n"],[1,"        } else {\r\n            this->get_right()->insert();\r\n"],[0,"        "]],"start1":2860,"start2":2860,"length1":16,"length2":76}]],"length":3122,"saved":false}
{"ts":1363871990246,"patch":[[{"diffs":[[0,"_left()->insert("],[1,"x"],[0,");\r\n        } el"]],"start1":2848,"start2":2848,"length1":32,"length2":33},{"diffs":[[0,">insert("],[1,"x"],[0,");\r\n    "]],"start1":2917,"start2":2917,"length1":16,"length2":17}]],"length":3124,"saved":false}
{"ts":1363872072089,"patch":[[{"diffs":[[0,"urn false;\r\n"],[1,"    } else if (this->retrieve() == 0) {\r\n        \r\n"],[0,"    } else {"]],"start1":2764,"start2":2764,"length1":24,"length2":75}]],"length":3175,"saved":false}
{"ts":1363872099847,"patch":[[{"diffs":[[0,"ieve() == x) {\r\n"],[1,"        \r\n"],[0,"        return f"]],"start1":2737,"start2":2737,"length1":32,"length2":42},{"diffs":[[0,"urn false;\r\n"],[1,"        \r\n"],[0,"    } else i"]],"start1":2774,"start2":2774,"length1":24,"length2":34},{"diffs":[[0,"      \r\n    "],[-1,"} else {"],[1,"    \r\n        \r\n    } else {\r\n        "],[0,"\r\n        if"]],"start1":2839,"start2":2839,"length1":32,"length2":62}]],"length":3225,"saved":false}
{"ts":1363872103575,"patch":[[{"diffs":[[0,"      \r\n        "],[1,"return true;"],[0,"\r\n        \r\n    "]],"start1":2839,"start2":2839,"length1":32,"length2":44}]],"length":3237,"saved":false}
{"ts":1363872147487,"patch":[[{"diffs":[[0,"        "],[-1,"return true;"],[0,"\r\n      "]],"start1":2847,"start2":2847,"length1":28,"length2":16}]],"length":3225,"saved":false}
{"ts":1363872389795,"patch":[[{"diffs":[[0,"      \r\n        "],[1,"BinarySearchTreeNode nodeX = new BinarySearchTreeNode(x);\r\n        this->left = nodeX;"],[0,"\r\n        \r\n    "]],"start1":2839,"start2":2839,"length1":32,"length2":118}]],"length":3311,"saved":false}
{"ts":1363872670873,"patch":[[{"diffs":[[0,"rue;\r\n\t}"],[-1," "],[0,"\r\n    \r\n"]],"start1":2471,"start2":2471,"length1":17,"length2":16},{"diffs":[[0,"lse if (this"],[-1,"->retrieve()"],[0," == 0) {\r\n  "]],"start1":2802,"start2":2802,"length1":36,"length2":24},{"diffs":[[0,"this"],[-1,"->left"],[0," = n"]],"start1":2909,"start2":2909,"length1":14,"length2":8}]],"length":3292,"saved":false}
{"ts":1363873384879,"patch":[[{"diffs":[[0,"TreeNode"],[1,"<Type>"],[0," nodeX ="]],"start1":2854,"start2":2854,"length1":16,"length2":22}]],"length":3298,"saved":false}
{"ts":1363873394077,"patch":[[{"diffs":[[0,"TreeNode"],[1,"<Type>"],[0,"(x);\r\n  "]],"start1":2893,"start2":2893,"length1":16,"length2":22}]],"length":3304,"saved":false}
{"ts":1363873650221,"patch":[[{"diffs":[[0,"else"],[-1," if (this == 0)"],[0," {\r\n"]],"start1":2801,"start2":2801,"length1":23,"length2":8},{"diffs":[[0,"    "],[-1,"    BinarySearchTreeNode<Type> nodeX = new BinarySearchTreeNode<Type>(x);\r\n        this = nodeX;"],[1,"}"],[0,"\r\n  "]],"start1":2819,"start2":2819,"length1":104,"length2":9}]],"length":3194,"saved":false}
{"ts":1363873673146,"patch":[[{"diffs":[[0," {\r\n        "],[1,"if (x < this->retrieve()) {\r\n            \r\n        }"],[0,"\r\n    }\r\n   "]],"start1":2805,"start2":2805,"length1":24,"length2":76}]],"length":3246,"saved":false}
{"ts":1363873807647,"patch":[[{"diffs":[[0," {\r\n            "],[1,"if (this->get_left() == 0) {\r\n                BinarySearchTreeNode<Type> nodeX = BinarySearchTreeNode<Type>(x)\r\n                this->left = nodeX;\r\n            }"],[0,"\r\n        }\r\n   "]],"start1":2842,"start2":2842,"length1":32,"length2":194}]],"length":3408,"saved":false}
{"ts":1363873862441,"patch":[[{"diffs":[[0,"\treturn "],[-1,"this->"],[0,""],[1,""],[0,"retrieve"]],"start1":1381,"start2":1381,"length1":22,"length2":16},{"diffs":[[0,"nst {\r\n\tif ("],[-1,"this->"],[0,""],[1,""],[0,"get_left() ="]],"start1":1724,"start2":1724,"length1":30,"length2":24},{"diffs":[[0,"\n        return "],[-1,"this->"],[0,""],[1,""],[0,"get_left()->min("]],"start1":1794,"start2":1794,"length1":38,"length2":32},{"diffs":[[0,"nst {\r\n\tif ("],[-1,"this->"],[0,""],[1,""],[0,"get_right() "]],"start1":1906,"start2":1906,"length1":30,"length2":24},{"diffs":[[0,"\n        return "],[-1,"this->"],[0,""],[1,""],[0,"get_right()->max"]],"start1":1977,"start2":1977,"length1":38,"length2":32},{"diffs":[[0,"return ("],[-1,"this->"],[0,"retrieve"]],"start1":2150,"start2":2150,"length1":22,"length2":16},{"diffs":[[0,"eve() + "],[-1,"this->"],[0,"get_left"]],"start1":2163,"start2":2163,"length1":22,"length2":16},{"diffs":[[0,"                "],[-1,"this->"],[0,"get_right()->sum"]],"start1":2193,"start2":2193,"length1":38,"length2":32},{"diffs":[[0,"    }\r\n\tif ("],[-1,"this->"],[0,""],[1,""],[0,"retrieve() ="]],"start1":2369,"start2":2369,"length1":30,"length2":24},{"diffs":[[0,"  \r\n    if (x < "],[-1,"this->"],[0,"retrieve()) {\r\n "]],"start1":2429,"start2":2429,"length1":38,"length2":32},{"diffs":[[0,"     return "],[-1,"this->"],[0,"get_left()->"]],"start1":2463,"start2":2463,"length1":30,"length2":24},{"diffs":[[0," return "],[-1,"this->"],[0,"get_righ"]],"start1":2517,"start2":2517,"length1":22,"length2":16},{"diffs":[[0,"    if ("],[-1,"this->"],[0,""],[1,""],[0,"retrieve"]],"start1":2646,"start2":2646,"length1":22,"length2":16},{"diffs":[[0,"        if (x < "],[-1,"this->"],[0,"retrieve()) {\r\n "]],"start1":2731,"start2":2731,"length1":38,"length2":32},{"diffs":[[0,"    if ("],[-1,"this->"],[0,"get_left"]],"start1":2770,"start2":2770,"length1":22,"length2":16},{"diffs":[[0,"        "],[-1,"this->"],[0,""],[1,""],[0,"left = n"]],"start1":2888,"start2":2888,"length1":22,"length2":16},{"diffs":[[0,"if (x < "],[-1,"this->"],[0,"retrieve"]],"start1":2986,"start2":2986,"length1":22,"length2":16},{"diffs":[[0,"            "],[-1,"this->"],[0,"get_left()->"]],"start1":3009,"start2":3009,"length1":30,"length2":24},{"diffs":[[0,"    "],[-1,"this->"],[0,"get_"]],"start1":3071,"start2":3071,"length1":14,"length2":8}]],"length":3294,"saved":false}
{"ts":1363873902607,"patch":[[{"diffs":[[0,"Type>(x)"],[1,";"],[0,"\r\n      "]],"start1":2870,"start2":2870,"length1":16,"length2":17},{"diffs":[[0,"         }\r\n"],[1,"        } else {\r\n            if (get_right() == 0) {\r\n                BinarySearchTreeNode<Type> nodeX = BinarySearchTreeNode<Type>(x);\r\n                right = nodeXp\r\n            }\r\n"],[0,"        }\r\n "]],"start1":2915,"start2":2915,"length1":24,"length2":209}]],"length":3480,"saved":false}
{"ts":1363873904192,"patch":[[{"diffs":[[0," = nodeX"],[-1,"p"],[1,";"],[0,"\r\n      "]],"start1":3086,"start2":3086,"length1":17,"length2":17}]],"length":3480,"saved":false}
{"ts":1363873913757,"patch":[[{"diffs":[[0," left = nodeX;\r\n"],[1,"            } else {\r\n                \r\n"],[0,"            }\r\n "]],"start1":2896,"start2":2896,"length1":32,"length2":72}]],"length":3520,"saved":false}
{"ts":1363873940451,"patch":[[{"diffs":[[0,"                "],[1,"get_left()->insert();"],[0,"\r\n            }\r"]],"start1":2934,"start2":2934,"length1":32,"length2":53}]],"length":3541,"saved":false}
{"ts":1363874046956,"patch":[[{"diffs":[[0,"right = nodeX;\r\n"],[1,"            } else {\r\n                get_right()->insert(x);\r\n"],[0,"            }\r\n "]],"start1":3142,"start2":3142,"length1":32,"length2":95}]],"length":3604,"saved":false}
{"ts":1363874048897,"patch":[[{"diffs":[[0,">insert("],[1,"x"],[0,");\r\n    "]],"start1":2961,"start2":2961,"length1":16,"length2":17}]],"length":3605,"saved":false}
{"ts":1363874056901,"patch":[[{"diffs":[[0,"left() == 0) {\r\n"],[1,"                \r\n"],[0,"                "]],"start1":2782,"start2":2782,"length1":32,"length2":50},{"diffs":[[0,"Node<Type>(x);\r\n"],[-1,""],[0,"                "]],"start1":2883,"start2":2883,"length1":32,"length2":32},{"diffs":[[0," left = nodeX;\r\n"],[1,"                \r\n"],[0,"            } el"]],"start1":2914,"start2":2914,"length1":32,"length2":50},{"diffs":[[0,"ight() == 0) {\r\n"],[1,"                \r\n"],[0,"                "]],"start1":3064,"start2":3064,"length1":32,"length2":50},{"diffs":[[0,"Node<Type>(x);\r\n"],[-1,""],[0,"                "]],"start1":3165,"start2":3165,"length1":32,"length2":32},{"diffs":[[0,"right = nodeX;\r\n"],[1,"                \r\n"],[0,"            } el"]],"start1":3197,"start2":3197,"length1":32,"length2":50}]],"length":3677,"saved":false}
{"ts":1363874071663,"patch":[[{"diffs":[[0," retrieve()) {\r\n"],[1,"            \r\n"],[0,"            if ("]],"start1":2746,"start2":2746,"length1":32,"length2":46},{"diffs":[[0," }\r\n        "],[-1,"} else {"],[1,"    \r\n        } else {\r\n            "],[0,"\r\n          "]],"start1":3035,"start2":3035,"length1":32,"length2":60}]],"length":3719,"saved":false}
{"ts":1363874079792,"patch":[[{"diffs":[[0," }\r\n"],[-1,"        \r\n    } else {\r\n        \r\n        if (x < retrieve()) {\r\n            get_left()->insert(x);\r\n        } else {\r\n            get_right()->insert(x);\r\n        }\r\n    }\r\n"],[0,"}\r\n\r"]],"start1":3365,"start2":3365,"length1":182,"length2":8}]],"length":3545,"saved":false}
{"ts":1363874120306,"patch":[[{"diffs":[[0,"\n        }\r\n"],[1,"        \r\n        return true;\r\n"],[0,"    }\r\n}\r\n\r\n"]],"start1":3350,"start2":3350,"length1":24,"length2":56}]],"length":3577,"saved":false}
{"ts":1363874315187,"patch":[[{"diffs":[[0,"ar() {\r\n"],[1,"    tree_root = 0;\r\n    count = 0;\r\n"],[0,"}\r\n\r\n// "]],"start1":3468,"start2":3468,"length1":16,"length2":52}]],"length":3613,"saved":false}
{"ts":1363874335478,"patch":[[{"diffs":[[0,"    "],[-1,"tree_root = 0;\r\n    count = 0;"],[0,"\r\n}\r"]],"start1":3476,"start2":3476,"length1":38,"length2":8}]],"length":3583,"saved":false}
{"ts":1363874354115,"patch":[[{"diffs":[[0,":clear() {\r\n"],[1,"    this = 0;\r\n"],[0,"    \r\n}\r\n\r\n/"]],"start1":3464,"start2":3464,"length1":24,"length2":39}]],"length":3598,"saved":false}
{"ts":1363876096378,"patch":[[{"diffs":[[0,"    "],[1,"if (get_left() != 0) {\r\n        left->clear();\r\n    }\r\n    \r\n    if (get_right() != 0) {\r\n        right->clear();\r\n    }\r\n    \r\n    delete "],[0,"this"],[-1," = 0"],[0,";\r\n "]],"start1":3476,"start2":3476,"length1":16,"length2":151}]],"length":3733,"saved":false}
{"ts":1363876098932,"patch":[[{"diffs":[[0,":clear() {\r\n"],[1,"    \r\n"],[0,"    if (get_"]],"start1":3464,"start2":3464,"length1":24,"length2":30}]],"length":3739,"saved":false}
{"ts":1363876101204,"patch":[[{"diffs":[[0," this;\r\n"],[-1,"    \r\n"],[0,"}\r\n\r\n// "]],"start1":3624,"start2":3624,"length1":22,"length2":16}]],"length":3733,"saved":false}
{"contributors":[],"silentsave":false,"ts":1363879627544,"patch":[[{"diffs":[[0,"ivate:\r\n"],[-1,"\t"],[1,"    "],[0,"\tType   "]],"start1":573,"start2":573,"length1":17,"length2":20}]],"length":3736,"saved":false}
{"ts":1363880448009,"patch":[[{"diffs":[[0,"hTreeNode<Type> "],[1,"*"],[0,"nodeX = BinarySe"]],"start1":2860,"start2":2860,"length1":32,"length2":33}]],"length":3737,"saved":false}
{"contributors":[],"silentsave":false,"ts":1363915349384,"patch":[[{"diffs":[[0,"    "],[-1,"BinarySearchTreeNode<Type> *nodeX = BinarySearchTreeNode<Type>(x);\r\n                left = nodeX"],[1,"left = new BinarySearchTreeNode(x)"],[0,";\r\n "]],"start1":2845,"start2":2845,"length1":104,"length2":42}]],"length":3675,"saved":false}
{"ts":1363915360816,"patch":[[{"diffs":[[0,"    "],[-1,"BinarySearchTreeNode<Type> nodeX = BinarySearchTreeNode<Type>(x);\r\n                right = nodeX"],[1,"right = new BinarySearchTreeNode(x)"],[0,";\r\n "]],"start1":3094,"start2":3094,"length1":104,"length2":43}]],"length":3614,"saved":false}
{"contributors":[],"silentsave":false,"ts":1363918601702,"patch":[[{"diffs":[[0,"e:\r\n    "],[-1,"\t"],[1,"    "],[0,"Type    "]],"start1":577,"start2":577,"length1":17,"length2":20},{"diffs":[[0,"\treturn "],[-1,"retrieve()"],[1,"x_value"],[0,";\r\n}\r\n\r\n"]],"start1":1387,"start2":1387,"length1":26,"length2":23},{"diffs":[[0,":insert("],[-1," "],[0," const T"]],"start1":2620,"start2":2620,"length1":17,"length2":16},{"diffs":[[0,"ype &x ) {\r\n"],[1,"\tbool condition;\r\n\r\n"],[0,"    if (retr"]],"start1":2636,"start2":2636,"length1":24,"length2":44},{"diffs":[[0,"        "],[-1,"return"],[1,"condition ="],[0," false;\r"]],"start1":2706,"start2":2706,"length1":22,"length2":27},{"diffs":[[0,"chTreeNode(x);\r\n"],[1,"\t\t\t\tcondition = true;\r\n"],[0,"                "]],"start1":2894,"start2":2894,"length1":32,"length2":55},{"diffs":[[0,"            "],[-1,""],[0,""],[1,"condition = "],[0,"get_left()->"]],"start1":2977,"start2":2977,"length1":24,"length2":36},{"diffs":[[0,"eeNode(x);\r\n"],[1,"\t\t\t\tcondition = true;\r\n"],[0,"            "]],"start1":3183,"start2":3183,"length1":24,"length2":47},{"diffs":[[0,"\n               "],[1," condition ="],[0," get_right()->in"]],"start1":3257,"start2":3257,"length1":32,"length2":44},{"diffs":[[0,"    "],[-1,"    \r\n        return true;\r\n    }"],[1,"}\r\n\r\n\treturn condition;"],[0,"\r\n}\r"]],"start1":3337,"start2":3337,"length1":41,"length2":31}]],"length":3698,"saved":false}
{"ts":1363919785802,"patch":[[{"diffs":[[0," {\r\n"],[-1,"\tbool condition;\r\n\r\n"],[0,"    "]],"start1":2644,"start2":2644,"length1":28,"length2":8},{"diffs":[[0,"        "],[-1,"condition ="],[1,"return"],[0," false;\r"]],"start1":2686,"start2":2686,"length1":27,"length2":22},{"diffs":[[0,"de(x);\r\n\t\t\t\t"],[-1,"condition ="],[1,"return"],[0," true;\r\n    "]],"start1":2877,"start2":2877,"length1":35,"length2":30},{"diffs":[[0,"            "],[-1,"condition ="],[1,"return"],[0," get_left()-"]],"start1":2947,"start2":2947,"length1":35,"length2":30},{"diffs":[[0,");\r\n\t\t\t\t"],[-1,"condition ="],[1,"return"],[0," true;\r\n"]],"start1":3156,"start2":3156,"length1":27,"length2":22},{"diffs":[[0,"    "],[-1,"condition ="],[1,"return"],[0," get"]],"start1":3230,"start2":3230,"length1":19,"length2":14},{"diffs":[[0,"  }\r"],[-1,"\n\r\n\treturn condition;\r"],[0,"\n}\r\n"]],"start1":3294,"start2":3294,"length1":30,"length2":8}]],"length":3631,"saved":false}
{"ts":1363919806314,"patch":[[{"diffs":[[0,";\r\n}\r\n\r\n"],[-1,"\r\n\r\n"],[0,"template"]],"start1":1402,"start2":1402,"length1":20,"length2":16}]],"length":3627,"saved":false}
{"ts":1363919809109,"patch":[[{"diffs":[[0,"pe>;\r\n};\r\n\r\n"],[-1,"\r\n"],[0,"template <ty"]],"start1":1127,"start2":1127,"length1":26,"length2":24}]],"length":3625,"saved":false}
