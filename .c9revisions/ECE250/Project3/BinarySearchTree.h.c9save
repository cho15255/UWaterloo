{"ts":1363701027418,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1363701030251,"patch":[[{"diffs":[[1,"#ifndef BSTTREE_H\r\n#define BSTTREE_H\r\n\r\n/*****************************************\r\n * UW User ID:  uwuserid\r\n * Submitted for ECE 250\r\n * Department of Electrical and Computer Engineering\r\n * University of Waterloo\r\n * Calender Term of Submission:  (Winter|Spring|Fall) 20NN\r\n *\r\n * By submitting this file, I affirm that\r\n * I am the author of all modifications to\r\n * the provided code.\r\n *****************************************/\r\n\r\n#include \"ece250.h\"\r\n#include \"BinarySearchTreeNode.h\"\r\n#include \"Exception.h\"\r\n#include <iostream>\r\n\r\ntemplate <typename Type>\r\nclass BinarySearchTree {\r\n    private:\r\n\t\tBinarySearchTreeNode<Type> *tree_root;\r\n\t\tint count;\r\n\r\n\tpublic:\r\n\t\tBinarySearchTree();\r\n\t\t~BinarySearchTree();\r\n\r\n\t\t// Accessors\r\n\r\n\t\tint size() const;\r\n\t\tbool empty() const;\r\n\r\n\t\tType min() const;\t\r\n\t\tType max() const;\t\r\n\t\tType sum() const;\r\n\t\r\n\t\r\n\t    \r\n\r\n\r\n\t\tBinarySearchTreeNode<Type> *root() const;\r\n\t\tbool member( const Type  &) const;\r\n\r\n\t\t// Mutators\r\n       \r\n\t\tvoid insert( const Type &);\r\n\t\tvoid clear();\r\n\r\n};\r\n\r\n\r\ntemplate <typename Type>\r\nBinarySearchTree<Type>::BinarySearchTree():\r\ntree_root( 0 ), \r\ncount( 0 ) {\r\n\t// empty constructor\r\n}\r\n\r\ntemplate <typename Type>\r\nBinarySearchTree<Type>::~BinarySearchTree() {\r\n}\r\n\r\ntemplate <typename Type>\r\nint BinarySearchTree<Type>::size() const {\r\n\treturn 0;\r\n}\r\n\r\ntemplate <typename Type>\r\nbool BinarySearchTree<Type>::empty() const {\r\n\treturn true;\r\n}\r\n\r\ntemplate <typename Type>\r\nType BinarySearchTree<Type>::min() const {\r\n\treturn Type();\r\n}\r\n\r\n\r\n\r\ntemplate <typename Type>\r\nType BinarySearchTree<Type>::max() const {\r\n\treturn Type();\r\n}\r\n\r\n\r\n\r\ntemplate <typename Type>\r\nType BinarySearchTree<Type>::sum() const {\r\n\treturn Type();\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\ntemplate <typename Type>\r\nBinarySearchTreeNode<Type> *BinarySearchTree<Type>::root() const \r\n{\r\n\treturn 0;\r\n}\r\n\r\n\r\n\r\n\r\ntemplate <typename Type>\r\nbool BinarySearchTree<Type>::member( const Type  &x ) const {\r\n\treturn false;\r\n}\r\n\r\ntemplate <typename Type>\r\nvoid BinarySearchTree<Type>::insert( const Type  &x ) {\r\n}\r\n\r\ntemplate <typename Type>\r\nvoid BinarySearchTree<Type>::clear() {\r\n}\r\n\r\n// You can modify this function however you want:  it will not be tested\r\n\r\ntemplate <typename Type>\r\nstd::ostream &operator << ( std::ostream &out, BinarySearchTree<Type> const &qt ) {\r\n\treturn out;\r\n}\r\n\r\n// Is an error showing up in ece250.h or elsewhere?\r\n// Did you forget a closing '}' ?\r\n\r\n#endif"]],"start1":0,"start2":0,"length1":0,"length2":2409}]],"length":2409,"saved":false}
{"contributors":[],"silentsave":false,"ts":1363869728239,"patch":[[{"diffs":[[0,"chTree() {\r\n"],[1,"    \r\n"],[0,"}\r\n\r\ntemplat"]],"start1":1229,"start2":1229,"length1":24,"length2":30},{"diffs":[[0,"size() const {\r\n"],[1,"    \r\n"],[0,"\treturn 0;\r\n}\r\n\r"]],"start1":1306,"start2":1306,"length1":32,"length2":38}]],"length":2421,"saved":false}
{"ts":1363869751148,"patch":[[{"diffs":[[0," {\r\n"],[-1,"    \r\n"],[0,"\treturn "],[-1,"0"],[1,"count"],[0,";\r\n}"]],"start1":1318,"start2":1318,"length1":23,"length2":21}]],"length":2419,"saved":false}
{"ts":1363869772880,"patch":[[{"diffs":[[0," {\r\n"],[-1,"\treturn tru"],[1,"    if (count == 0) {\r\n        return true;\r\n    }\r\n    \r\n\treturn fals"],[0,"e;\r\n"]],"start1":1411,"start2":1411,"length1":19,"length2":78}]],"length":2478,"saved":false}
{"ts":1363869898115,"patch":[[{"diffs":[[0,":min() const {\r\n"],[1,"    if (tree_root -> get_left == 0) {\r\n        \r\n    }\r\n"],[0,"\treturn Type();\r"]],"start1":1548,"start2":1548,"length1":32,"length2":88}]],"length":2534,"saved":false}
{"ts":1363870082050,"patch":[[{"diffs":[[0,"        "],[1,"return tree_root->retrieve"],[0,"\r\n    }\r"]],"start1":1603,"start2":1603,"length1":16,"length2":42}]],"length":2560,"saved":false}
{"ts":1363870093848,"patch":[[{"diffs":[[0,"retrieve"],[1,"();"],[0,"\r\n    }\r"]],"start1":1629,"start2":1629,"length1":16,"length2":19}]],"length":2563,"saved":false}
{"ts":1363870148548,"patch":[[{"diffs":[[0,"eve();\r\n"],[1,"    } else {\r\n        return tree_root->get_left->min();\r\n"],[0,"    }\r\n\t"]],"start1":1634,"start2":1634,"length1":16,"length2":74}]],"length":2621,"saved":false}
{"ts":1363870202660,"patch":[[{"diffs":[[0,"\n    }\r\n"],[-1,"\treturn Type();\r\n"],[0,"}\r\n\r\n\r\n\r"]],"start1":1699,"start2":1699,"length1":33,"length2":16}]],"length":2604,"saved":false}
{"ts":1363870237953,"patch":[[{"diffs":[[0,"() const {\r\n"],[-1,"\treturn Type();"],[1,"    if (tree_root->get_left==0) {\r\n        return tree_root->retrieve();\r\n    } else {\r\n        return tree_root->get_left->min();\r\n    }"],[0,"\r\n}\r\n\r\n\r\n\r\nt"]],"start1":1774,"start2":1774,"length1":39,"length2":161}]],"length":2726,"saved":false}
{"ts":1363870241011,"patch":[[{"diffs":[[0,"oot->get_left->m"],[-1,"in"],[1,"ax"],[0,"();\r\n    }\r\n}\r\n\r"]],"start1":1895,"start2":1895,"length1":34,"length2":34}]],"length":2726,"saved":false}
{"ts":1363870336232,"patch":[[{"diffs":[[0," {\r\n"],[-1,"\treturn Type();"],[1,"    if (this == 0) {\r\n        return 0;\r\n    } else {\r\n        return (this->retrieve() + this->get_left()->sum() + this->get_right()->sum());\r\n    }"],[0,"\r\n}\r"]],"start1":2000,"start2":2000,"length1":23,"length2":157}]],"length":2860,"saved":false}
{"ts":1363870358523,"patch":[[{"diffs":[[0,"()->sum() + "],[1,"\r\n                "],[0,"this->get_ri"]],"start1":2108,"start2":2108,"length1":24,"length2":42}]],"length":2878,"saved":false}
{"ts":1363870402240,"patch":[[{"diffs":[[0,"}\r\n}\r\n\r\n"],[-1,"\r\n\r\n\r\n\r\n\r\n"],[0,"template"]],"start1":2170,"start2":2170,"length1":26,"length2":16}]],"length":2868,"saved":false}
{"ts":1363870475015,"patch":[[{"diffs":[[0,"\treturn "],[-1,"0"],[1,"tree_root"],[0,";\r\n}\r\n\r\n"]],"start1":2274,"start2":2274,"length1":17,"length2":25}]],"length":2876,"saved":false}
{"ts":1363870484782,"patch":[[{"diffs":[[0,";\r\n}\r\n\r\n"],[-1,"\r\n\r\n\r\n"],[0,"template"]],"start1":2291,"start2":2291,"length1":22,"length2":16}]],"length":2870,"saved":false}
{"ts":1363870527630,"patch":[[{"diffs":[[0,"   if (t"],[-1,"his"],[1,"ree_root"],[0," == 0) {"]],"start1":2005,"start2":2005,"length1":19,"length2":24},{"diffs":[[0,"eturn (t"],[-1,"his"],[1,"ree_root"],[0,"->retrie"]],"start1":2073,"start2":2073,"length1":19,"length2":24},{"diffs":[[0,"ve() + t"],[-1,"his"],[1,"ree_root"],[0,"->get_le"]],"start1":2097,"start2":2097,"length1":19,"length2":24},{"diffs":[[0,"       t"],[-1,"his"],[1,"ree_root"],[0,"->get_ri"]],"start1":2146,"start2":2146,"length1":19,"length2":24},{"diffs":[[0,"onst {\r\n"],[-1,"\treturn false;"],[1,"    if (tree_root->retrieve() == x) {\r\n        return \r\n    }"],[0,"\r\n}\r\n\r\nt"]],"start1":2400,"start2":2400,"length1":30,"length2":77}]],"length":2937,"saved":false}
{"ts":1363870532859,"patch":[[{"diffs":[[0," return "],[1,"true;"],[0,"\r\n    }\r"]],"start1":2454,"start2":2454,"length1":16,"length2":21}]],"length":2942,"saved":false}
{"ts":1363870538346,"patch":[[{"diffs":[[0,"turn true;\r\n"],[1,"    } else {\r\n        \r\n"],[0,"    }\r\n}\r\n\r\n"]],"start1":2457,"start2":2457,"length1":24,"length2":48}]],"length":2966,"saved":false}
{"ts":1363870544848,"patch":[[{"diffs":[[0,"        "],[1,"return "],[0,"\r\n    }\r"]],"start1":2483,"start2":2483,"length1":16,"length2":23}]],"length":2973,"saved":false}
{"ts":1363870799364,"patch":[[{"diffs":[[0,"   }"],[-1," else {\r\n        return "],[1,"\r\n    \r\n    if (x < tree_root->retrieve()) {\r\n        return tree_root->get_left()->member(x);\r\n    } else {\r\n        return tree_root->get_right()->member(x);"],[0,"\r\n  "]],"start1":2470,"start2":2470,"length1":32,"length2":167}]],"length":3108,"saved":false}
{"ts":1363870844688,"patch":[[{"diffs":[[0,"pe  &x ) {\r\n"],[1,"    \r\n"],[0,"}\r\n\r\ntemplat"]],"start1":2718,"start2":2718,"length1":24,"length2":30}]],"length":3114,"saved":false}
{"ts":1363870881912,"patch":[[{"diffs":[[0,"ue;\r\n    }\r\n"],[1,"    if (tree_root->retrieve() == 0) {\r\n        return false;\r\n    }\r\n"],[0,"    \r\n    if"]],"start1":2464,"start2":2464,"length1":24,"length2":93}]],"length":3183,"saved":false}
{"ts":1363870889412,"patch":[[{"diffs":[[0,"ve() == "],[-1,"x"],[1,"0"],[0,") {\r\n   "]],"start1":2433,"start2":2433,"length1":17,"length2":17},{"diffs":[[0,"\n        return "],[-1,"tru"],[1,"fals"],[0,"e;\r\n    }\r\n    i"]],"start1":2446,"start2":2446,"length1":35,"length2":36},{"diffs":[[0,"->retrieve() == "],[-1,"0"],[1,"x"],[0,") {\r\n        ret"]],"start1":2494,"start2":2494,"length1":33,"length2":33},{"diffs":[[0,"\n        return "],[-1,"fals"],[1,"tru"],[0,"e;\r\n    }\r\n    \r"]],"start1":2515,"start2":2515,"length1":36,"length2":35}]],"length":3183,"saved":false}
{"ts":1363871199393,"patch":[[{"diffs":[[0,"pe  &x ) {\r\n    "],[1,"if (tree_root == 0) {\r\n        \r\n    }"],[0,"\r\n}\r\n\r\ntemplate "]],"start1":2787,"start2":2787,"length1":32,"length2":70}]],"length":3221,"saved":false}
{"ts":1363871492115,"patch":[[{"diffs":[[0,"e_root == 0) {\r\n"],[1,"        tree_root = new BinarySearchTreeNode (x);\r\n    } else {\r\n"],[0,"        \r\n    }\r"]],"start1":2810,"start2":2810,"length1":32,"length2":97}]],"length":3286,"saved":false}
{"ts":1363871602694,"patch":[[{"diffs":[[0," {\r\n        "],[1,"if (tree_root < x) {\r\n            \r\n        }"],[0,"\r\n    }\r\n}\r\n"]],"start1":2887,"start2":2887,"length1":24,"length2":69}]],"length":3331,"saved":false}
{"ts":1363871616284,"patch":[[{"diffs":[[0,"            "],[1,"tree_root->get_left()->"],[0,"\r\n        }\r"]],"start1":2921,"start2":2921,"length1":24,"length2":47}]],"length":3354,"saved":false}
{"ts":1363871626462,"patch":[[{"diffs":[[0,"left()->"],[1,"insert();"],[0,"\r\n      "]],"start1":2948,"start2":2948,"length1":16,"length2":25}]],"length":3363,"saved":false}
{"ts":1363871642963,"patch":[[{"diffs":[[0,">insert();\r\n"],[1,"        } else {\r\n            tree_root->get_right()->insert();\r\n"],[0,"        }\r\n "]],"start1":2955,"start2":2955,"length1":24,"length2":89}]],"length":3428,"saved":false}
{"ts":1363871661597,"patch":[[{"diffs":[[0,"_left()->insert("],[1,"x"],[0,");\r\n        } el"]],"start1":2947,"start2":2947,"length1":32,"length2":33},{"diffs":[[0,">insert("],[1,"x"],[0,");\r\n    "]],"start1":3021,"start2":3021,"length1":16,"length2":17}]],"length":3430,"saved":false}
{"ts":1363871819111,"patch":[[{"diffs":[[0,"ree_root"],[1,"->retrieve()"],[0," < x) {\r"]],"start1":2904,"start2":2904,"length1":16,"length2":28}]],"length":3442,"saved":false}
{"ts":1363871903805,"patch":[[{"diffs":[[0," {\r\n        if ("],[1,"x < "],[0,"tree_root->retri"]],"start1":2887,"start2":2887,"length1":32,"length2":36},{"diffs":[[0,"e() "],[-1,"< x"],[0,") {\r"]],"start1":2925,"start2":2925,"length1":11,"length2":8}]],"length":3443,"saved":false}
{"ts":1363871905317,"patch":[[{"diffs":[[0,"trieve()"],[-1," "],[0,") {\r\n   "]],"start1":2920,"start2":2920,"length1":17,"length2":16}]],"length":3442,"saved":false}
{"ts":1363872594594,"patch":[[{"diffs":[[0,"\n       "],[-1," if (x <"],[0," tree_ro"]],"start1":2890,"start2":2890,"length1":24,"length2":16},{"diffs":[[0,"ot->"],[-1,"retrieve()) {\r\n            tree_root->get_left()->insert(x);\r\n        } else {\r\n            tree_root->get_right()->insert(x);\r\n        }"],[1,"insert(x);"],[0,"\r\n  "]],"start1":2906,"start2":2906,"length1":145,"length2":18}]],"length":3307,"saved":false}
{"ts":1363873270419,"patch":[[{"diffs":[[0,"ert(x);\r\n    }\r\n"],[1,"    count ++;\r\n"],[0,"}\r\n\r\ntemplate <t"]],"start1":2913,"start2":2913,"length1":32,"length2":47}]],"length":3322,"saved":false}
{"ts":1363873402301,"patch":[[{"diffs":[[0,"TreeNode"],[1,"<Type>"],[0," (x);\r\n "]],"start1":2862,"start2":2862,"length1":16,"length2":22}]],"length":3328,"saved":false}
{"ts":1363873494777,"patch":[[{"diffs":[[0,"ar() {\r\n"],[1,"    \r\n"],[0,"}\r\n\r\n// "]],"start1":3013,"start2":3013,"length1":16,"length2":22}]],"length":3334,"saved":false}
{"ts":1363873503016,"patch":[[{"diffs":[[0,"ar() {\r\n    "],[1,"tree_root = 0;\r\n    count = 0;"],[0,"\r\n}\r\n\r\n// Yo"]],"start1":3013,"start2":3013,"length1":24,"length2":54}]],"length":3364,"saved":false}
{"ts":1363874158518,"patch":[[{"diffs":[[0,"    "],[-1,"if (tree_root == 0) {\r\n        return 0;\r\n    } else {\r\n        return (tree_root->retrieve() + tree_root->get_left()->sum() + \r\n                tree_root->get_right()->sum());\r\n    }"],[1,"return tree_root->sum(0)"],[0,"\r\n}\r"]],"start1":2004,"start2":2004,"length1":191,"length2":32}]],"length":3205,"saved":false}
{"ts":1363874159534,"patch":[[{"diffs":[[0,"ot->sum("],[-1,"0"],[0,")\r\n}\r\n\r\n"]],"start1":2022,"start2":2022,"length1":17,"length2":16}]],"length":3204,"saved":false}
{"ts":1363874160434,"patch":[[{"diffs":[[0,"t->sum()"],[1,";"],[0,"\r\n}\r\n\r\nt"]],"start1":2023,"start2":2023,"length1":16,"length2":17}]],"length":3205,"saved":false}
{"ts":1363874184844,"patch":[[{"diffs":[[0,"    "],[-1,"if (tree_root->retrieve() == 0) {\r\n        return false;\r\n    }\r\n    if (tree_root->retrieve() == x) {\r\n        return true;\r\n    }\r\n    \r\n    if (x < tree_root->retrieve()) {\r\n        return tree_root->get_left()"],[1,"return tree_root"],[0,"->me"]],"start1":2249,"start2":2249,"length1":221,"length2":24},{"diffs":[[0,"ber("],[-1,"x"],[0,");\r\n"],[-1,"    } else {\r\n        return tree_root->get_right()->member(x);\r\n    }\r\n"],[0,"}\r\n\r"]],"start1":2274,"start2":2274,"length1":85,"length2":12}]],"length":2935,"saved":false}
{"ts":1363874186412,"patch":[[{"diffs":[[0,">member("],[1,"x"],[0,");\r\n}\r\n\r"]],"start1":2270,"start2":2270,"length1":16,"length2":17}]],"length":2936,"saved":false}
{"ts":1363874208999,"patch":[[{"diffs":[[0,"root"],[-1," = 0;\r\n    count = 0"],[1,"->clear()"],[0,";\r\n}"]],"start1":2602,"start2":2602,"length1":28,"length2":17}]],"length":2925,"saved":false}
{"ts":1363874224405,"patch":[[{"diffs":[[0,"    "],[-1,"if (tree_root -> get_left == 0) {\r\n        return tree_root->retrieve();\r\n    } else {\r\n        return tree_root->get_left->min();\r\n    }"],[1,"return tree_root->min();"],[0,"\r\n}\r"]],"start1":1564,"start2":1564,"length1":145,"length2":32}]],"length":2812,"saved":false}
{"ts":1363874233573,"patch":[[{"diffs":[[0,"    "],[-1,"if (tree_root->get_left==0) {\r\n        return tree_root->retrieve();\r\n    } else {\r\n        return tree_root->get_left->max();\r\n    }"],[1,"return tree_root->max();"],[0,"\r\n}\r"]],"start1":1673,"start2":1673,"length1":141,"length2":32}]],"length":2703,"saved":false}
{"ts":1363874789619,"patch":[[{"diffs":[[0,":clear() {\r\n"],[1,"    \r\n    \r\n    \r\n"],[0,"    tree_roo"]],"start1":2359,"start2":2359,"length1":24,"length2":42}]],"length":2721,"saved":false}
{"ts":1363874910855,"patch":[[{"diffs":[[0,"\r\n    \r\n    "],[1,"if (get_left() != 0) {\r\n        left->clear();\r\n    }"],[0,"\r\n    \r\n    "]],"start1":2369,"start2":2369,"length1":24,"length2":77}]],"length":2774,"saved":false}
{"ts":1363875396518,"patch":[[{"diffs":[[0,"t() "],[-1,"!= 0) {\r\n        left->clear();"],[1,"== 0 && right == 0) {"],[0,"\r\n  "]],"start1":2392,"start2":2392,"length1":39,"length2":29}]],"length":2764,"saved":false}
{"ts":1363875399071,"patch":[[{"diffs":[[0,"ht == 0) {\r\n"],[1,"        \r\n"],[0,"    }\r\n    \r"]],"start1":2407,"start2":2407,"length1":24,"length2":34}]],"length":2774,"saved":false}
{"ts":1363875530530,"patch":[[{"diffs":[[0," {\r\n        "],[1,"delete this;"],[0,"\r\n    }\r\n   "]],"start1":2415,"start2":2415,"length1":24,"length2":36}]],"length":2786,"saved":false}
{"ts":1363875572473,"patch":[[{"diffs":[[0,"    "],[-1,"delete this"],[1,"return"],[0,";\r\n "]],"start1":2423,"start2":2423,"length1":19,"length2":14}]],"length":2781,"saved":false}
{"ts":1363875622611,"patch":[[{"diffs":[[0,"eturn;\r\n"],[1,"    } else if (get_left() != 0) {\r\n        left->clear();\r\n"],[0,"    }\r\n "]],"start1":2428,"start2":2428,"length1":16,"length2":75}]],"length":2840,"saved":false}
{"ts":1363875636181,"patch":[[{"diffs":[[0,"->clear();\r\n"],[1,"    } else if (get_right() != 0) {\r\n        right->clear();\r\n"],[0,"    }\r\n    \r"]],"start1":2483,"start2":2483,"length1":24,"length2":85}]],"length":2901,"saved":false}
{"ts":1363875704419,"patch":[[{"diffs":[[0," return;\r\n    } "],[-1,"else"],[1,"\r\n    \r\n   "],[0," if (get_left() "]],"start1":2426,"start2":2426,"length1":36,"length2":43},{"diffs":[[0,";\r\n    }"],[-1," else"],[1,"\r\n    \r\n   "],[0," if (get"]],"start1":2499,"start2":2499,"length1":21,"length2":27}]],"length":2914,"saved":false}
{"ts":1363875728021,"patch":[[{"diffs":[[0,"    "],[-1,"tree_root->clear()"],[1,"delete this"],[0,";\r\n}"]],"start1":2582,"start2":2582,"length1":26,"length2":19}]],"length":2907,"saved":false}
{"ts":1363876083287,"patch":[[{"diffs":[[0,"  \r\n"],[-1,"    if (get_left() == 0 && right == 0) {\r\n        return;\r\n    } \r\n    \r\n"],[0,"    "]],"start1":2373,"start2":2373,"length1":81,"length2":8}]],"length":2834,"saved":false}
{"ts":1363876124773,"patch":[[{"diffs":[[0,"\r\n    \r\n"],[1,"    tree_root->clear();\r\n"],[0,"    \r\n}\r"]],"start1":2369,"start2":2369,"length1":16,"length2":41}]],"length":2715,"saved":false}
{"ts":1363876127257,"patch":[[{"diffs":[[0,"ear();\r\n    "],[1,"count++;"],[0,"\r\n}\r\n\r\n// Yo"]],"start1":2394,"start2":2394,"length1":24,"length2":32}]],"length":2723,"saved":false}
{"ts":1363876129657,"patch":[[{"diffs":[[0,"   count"],[-1,"++"],[1," = 0"],[0,";\r\n}\r\n\r\n"]],"start1":2403,"start2":2403,"length1":18,"length2":20}]],"length":2725,"saved":false}
{"ts":1363876132443,"patch":[[{"diffs":[[0,"t = 0;\r\n"],[1,"    \r\n"],[0,"}\r\n\r\n// "]],"start1":2410,"start2":2410,"length1":16,"length2":22}]],"length":2731,"saved":false}
{"ts":1363876148820,"patch":[[{"diffs":[[0,"ee() {\r\n    "],[1,"tree_root->clear;"],[0,"\r\n}\r\n\r\ntempl"]],"start1":1233,"start2":1233,"length1":24,"length2":41}]],"length":2748,"saved":false}
{"ts":1363876150556,"patch":[[{"diffs":[[0,"t->clear"],[-1,";"],[1,"()"],[0,"\r\n}\r\n\r\nt"]],"start1":1253,"start2":1253,"length1":17,"length2":18}]],"length":2749,"saved":false}
{"ts":1363876151513,"patch":[[{"diffs":[[0,">clear()"],[1,";"],[0,"\r\n}\r\n\r\nt"]],"start1":1255,"start2":1255,"length1":16,"length2":17}]],"length":2750,"saved":false}
{"ts":1363876441297,"patch":[[{"diffs":[[0,"\r\n    \r\n"],[1,"    if (tree_root != 0) {\r\n        \r\n    "],[0,"    tree"]],"start1":2388,"start2":2388,"length1":16,"length2":57},{"diffs":[[0,"ear();\r\n    "],[1,"  "],[1,"  "],[0,"count = 0;\r\n"]],"start1":2454,"start2":2454,"length1":24,"length2":28},{"diffs":[[0,"t = 0;\r\n"],[1,"    }\r\n"],[0,"    \r\n}\r"]],"start1":2474,"start2":2474,"length1":16,"length2":23}]],"length":2802,"saved":false}
{"ts":1363876444016,"patch":[[{"diffs":[[0,"unt = 0;"],[1,"\\\r\n        "],[0,"\r\n    }\r"]],"start1":2472,"start2":2472,"length1":16,"length2":27}]],"length":2813,"saved":false}
{"ts":1363876446087,"patch":[[{"diffs":[[0,"= 0;"],[-1,"\\"],[0,"\r\n  "]],"start1":2476,"start2":2476,"length1":9,"length2":8}]],"length":2812,"saved":false}
{"contributors":[],"silentsave":false,"ts":1363879633911,"patch":[[{"diffs":[[0,"ivate:\r\n"],[-1,"\t"],[1,"    "],[0,"\tBinaryS"]],"start1":599,"start2":599,"length1":17,"length2":20},{"diffs":[[0," {\r\n"],[-1,"        if (tree_root != 0) {\r\n        \r\n"],[0,"    "]],"start1":2265,"start2":2265,"length1":49,"length2":8},{"diffs":[[0,"    "],[-1,"  "],[-1,"  "],[0,"count "],[-1," = 0;\r\n        \r\n    }\r\n    "],[1,"++;"],[0,"\r\n}\r"]],"start1":2307,"start2":2307,"length1":46,"length2":17},{"diffs":[[0,"if ("],[-1,"get_left()"],[1,"tree_root"],[0," != "]],"start1":2403,"start2":2403,"length1":18,"length2":17},{"diffs":[[0,"    "],[-1,"left->clear();\r\n    count++;}\r\n"],[1,"\r\n    "],[0,"    "]],"start1":2430,"start2":2430,"length1":39,"length2":14},{"diffs":[[0,"    "],[-1,"\r\n"],[0,"    "],[-1,"if (get_right() != 0) {\r\n        right->clear();\r\n    }\r\n    \r\n    delete this;"],[1,"count = 0;\r\n        \r\n    }\r\n    "],[0,"\r\n}\r"]],"start1":2465,"start2":2465,"length1":93,"length2":45}]],"length":2815,"saved":false}
{"contributors":[],"silentsave":false,"ts":1363918595193,"patch":[[{"diffs":[[0,"e:\r\n    "],[-1,"\t"],[1,"    "],[0,"BinarySe"]],"start1":603,"start2":603,"length1":17,"length2":20},{"diffs":[[0,":min() const {\r\n"],[1,"\tif (tree_root == 0) {\r\n\t\tthrow underflow(); \r\n\t}\r\n\r\n"],[0,"    return tree_"]],"start1":1573,"start2":1573,"length1":32,"length2":85},{"diffs":[[0,":max() const {\r\n"],[1,"\tif (tree_root == 0) {\r\n\t\tthrow underflow();\r\n\t} \r\n\r\n"],[0,"    return tree_"]],"start1":1735,"start2":1735,"length1":32,"length2":85},{"diffs":[[0,"Type> (x);\r\n"],[1,"\t\tcount ++;\r\n"],[0,"    } else {"]],"start1":2352,"start2":2352,"length1":24,"length2":37},{"diffs":[[0,"else {\r\n        "],[1,"if ("],[0,"tree_root->inser"]],"start1":2383,"start2":2383,"length1":32,"length2":36},{"diffs":[[0,"t(x)"],[-1,";\r\n    }\r\n    "],[1,") {\r\n\t\t\t"],[0,"count"],[-1," "],[0,"++;\r\n"],[1,"\t\t}\r\n    }\r\n"],[0,"}\r\n\r"]],"start1":2419,"start2":2419,"length1":33,"length2":38},{"diffs":[[0,"= 0) {\r\n"],[-1,"        \r\n"],[0,"        "]],"start1":2549,"start2":2549,"length1":26,"length2":16},{"diffs":[[0,"unt = 0;"],[-1,"\r\n        "],[0,""],[1,""],[0,"\r\n    }\r"]],"start1":2596,"start2":2596,"length1":26,"length2":16}]],"length":2926,"saved":false}
{"ts":1363919815609,"patch":[[{"diffs":[[0,"t->max();\r\n}\r\n\r\n"],[-1,"\r\n\r\n"],[0,"template <typena"]],"start1":1823,"start2":1823,"length1":36,"length2":32}]],"length":2922,"saved":false}
{"ts":1363919817986,"patch":[[{"diffs":[[0,";\r\n}\r\n\r\n"],[-1,"\r\n\r\n"],[0,"template"]],"start1":1669,"start2":1669,"length1":20,"length2":16}]],"length":2918,"saved":false}
{"ts":1363922217633,"patch":[[{"diffs":[[0,"t->min();\r\n}\r\n\r\n"],[1,"\r\n\r\n"],[0,"template <typena"]],"start1":1661,"start2":1661,"length1":32,"length2":36},{"diffs":[[0,"t->max();\r\n}\r\n\r\n"],[1,"\r\n\r\n"],[0,"template <typena"]],"start1":1823,"start2":1823,"length1":32,"length2":36}]],"length":2926,"saved":false}
