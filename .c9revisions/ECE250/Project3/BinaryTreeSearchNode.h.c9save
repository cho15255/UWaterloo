{"ts":1363701036620,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1363701037735,"patch":[[{"diffs":[[1,"#ifndef NODE_H\r\n#define NODE_H\r\n\r\n/*****************************************\r\n * UW User ID:  uwuserid\r\n * Submitted for ECE 250\r\n * Department of Electrical and Computer Engineering\r\n * University of Waterloo\r\n * Calender Term of Submission:  (Winter|Spring|Fall) 20NN\r\n *\r\n * By submitting this file, I affirm that\r\n * I am the author of all modifications to\r\n * the provided code.\r\n *****************************************/\r\n\r\n#include \"ece250.h\"\r\n\r\n\r\ntemplate <typename Type>\r\nclass BinarySearchTree;\r\n\r\n\r\ntemplate <typename Type>\r\nclass BinarySearchTreeNode{\r\n    private:\r\n\t\tType       x_value;\t\r\n        \r\n\t\r\n\t\tBinarySearchTreeNode<Type> *right;\r\n\t\tBinarySearchTreeNode<Type> *left;\r\n\t\t\r\n\t\t\r\n\r\n\tpublic:\r\n           \r\n         \r\n  \r\n\t\tBinarySearchTreeNode<Type>( const Type  & = Type());\r\n\r\n\t\tType retrieve() const;\r\n\t\r\n\r\n\t\tBinarySearchTreeNode *get_right() const;\r\n\t\tBinarySearchTreeNode *get_left() const;\r\n\t\t\r\n\r\n\t\tType min() const;\r\n\t\r\n\t\tType max() const;\r\n\r\n\t\tType sum() const;\r\n\t\t\r\n\r\n\t\tbool member( const Type & ) const;\r\n\r\n\t\tbool insert( const Type & );\r\n\t\tvoid clear();\r\n\r\n\tfriend class BinarySearchTree<Type>;\r\n};\r\n\r\n\r\ntemplate <typename Type>\r\nBinarySearchTreeNode<Type>::BinarySearchTreeNode( const Type  &x ):\r\nx_value( x ),  \r\nright( 0 ),\r\nleft( 0 )\r\n{\r\n\t// empty constructor\r\n}\r\n\r\n\r\n\r\n\r\n\r\ntemplate <typename Type>\r\nType BinarySearchTreeNode<Type>::retrieve() const {\r\n\treturn x_value;\r\n}\r\n\r\n\r\n\r\ntemplate <typename Type>\r\nBinarySearchTreeNode<Type> *BinarySearchTreeNode<Type>::get_left() const {\r\n\treturn left;\r\n}\r\n\r\ntemplate <typename Type>\r\nBinarySearchTreeNode<Type> *BinarySearchTreeNode<Type>::get_right() const {\r\n\treturn right;\r\n}\r\n\r\n\r\ntemplate <typename Type>\r\nType BinarySearchTreeNode<Type>::min() const {\r\n\t// you may use std::min\r\n\treturn Type();\r\n}\r\n\r\n\r\n\r\ntemplate <typename Type>\r\nType BinarySearchTreeNode<Type>::max() const {\r\n\t// you may use std::max\r\n\treturn Type();\r\n}\r\n\r\n\r\n\r\ntemplate <typename Type>\r\nType BinarySearchTreeNode<Type>::sum() const {\r\n\tif ( this == 0 ) {\r\n\t\t// hint...\r\n\t\treturn 0;\r\n\t} else {\r\n\t\treturn 0;\r\n\t}\r\n}\r\n\r\n\r\n\r\ntemplate <typename Type>\r\nbool BinarySearchTreeNode<Type>::member( const Type &x) const {\r\n\tif ( this == 0 ) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn false;\r\n}\r\n\r\ntemplate <typename Type>\r\nbool BinarySearchTreeNode<Type>::insert(  const Type &x ) {\r\n\treturn false;\r\n}\r\n\r\ntemplate <typename Type>\r\nvoid BinarySearchTreeNode<Type>::clear() {\r\n}\r\n\r\n// Is an error showing up in ece250.h or elsewhere?\r\n// Did you forget a closing '}' ?\r\n\r\n#endif"]],"start1":0,"start2":0,"length1":0,"length2":2510}]],"length":2510,"saved":false}
{"ts":1363702271274,"patch":[[{"diffs":[[0,"{\r\n\t"],[-1,"// you may use std::min"],[1,"if (get_left() == null) {\r\n        return x_value;\r\n\t} else {\r\n        return left->min;   \r\n\t}\r\n    "],[0,"\r\n\tr"]],"start1":1735,"start2":1735,"length1":31,"length2":109},{"diffs":[[0,"\r\n    \r\n\treturn "],[-1,"Type()"],[1,"x_value"],[0,";\r\n}\r\n\r\n\r\n\r\ntemp"]],"start1":1834,"start2":1834,"length1":38,"length2":39}]],"length":2589,"saved":false}
{"ts":1363702321635,"patch":[[{"diffs":[[0,"eft->min"],[1,"()"],[0,";   \r\n\t}"]],"start1":1818,"start2":1818,"length1":16,"length2":18},{"diffs":[[0,"\t}\r\n"],[-1,"    \r\n\treturn x_value;\r\n"],[0,"}\r\n\r"]],"start1":1834,"start2":1834,"length1":32,"length2":8}]],"length":2567,"saved":false}
{"ts":1363702458996,"patch":[[{"diffs":[[0,"->min();"],[-1,"   "],[0,"\r\n"],[1,""],[0,"\t}\r\n}\r\n\r"]],"start1":1821,"start2":1821,"length1":21,"length2":18},{"diffs":[[0,"{\r\n\t"],[-1,"// you may use std::max"],[1,"if (get_right() == null) {\r\n        return x_value;   \r\n\t} else {\r\n        return right->max();   \r\n\t}"],[0,"\r\n\tr"]],"start1":1915,"start2":1915,"length1":31,"length2":110}]],"length":2643,"saved":false}
{"ts":1363702463122,"patch":[[{"diffs":[[0,"x_value;"],[-1,"   "],[0,"\r\n\t} els"]],"start1":1962,"start2":1962,"length1":19,"length2":16}]],"length":2640,"saved":false}
{"ts":1363702465180,"patch":[[{"diffs":[[0,"->max();"],[-1,"   "],[0,"\r\n\t}\r\n\tr"]],"start1":2003,"start2":2003,"length1":19,"length2":16}]],"length":2637,"saved":false}
{"ts":1363702744094,"patch":[[{"diffs":[[0," {\r\n"],[-1,"\t\t// hint...\r\n"],[0,"\t\tre"]],"start1":2134,"start2":2134,"length1":22,"length2":8}]],"length":2623,"saved":false}
{"ts":1363702776523,"patch":[[{"diffs":[[0,"\n\t} else {\r\n"],[-1,"\t\treturn 0;"],[1,"        "],[0,"\r\n\t}\r\n}\r\n\r\n\r"]],"start1":2150,"start2":2150,"length1":35,"length2":32}]],"length":2620,"saved":false}
{"ts":1363702788738,"patch":[[{"diffs":[[0,"\t}\r\n"],[-1,"\treturn Type();\r\n"],[0,"}\r\n\r"]],"start1":2013,"start2":2013,"length1":25,"length2":8}]],"length":2603,"saved":false}
{"ts":1363702803215,"patch":[[{"diffs":[[0,"t_left() == "],[-1,"null"],[1,"0"],[0,") {\r\n       "]],"start1":1745,"start2":1745,"length1":28,"length2":25},{"diffs":[[0," == "],[-1,"null"],[1,"0"],[0,") {\r"]],"start1":1931,"start2":1931,"length1":12,"length2":9}]],"length":2597,"saved":false}
{"ts":1363703285588,"patch":[[{"diffs":[[0,"\n        return "],[-1,"x_value"],[1,"retrieve()"],[0,";\r\n\t} else {\r\n  "]],"start1":1762,"start2":1762,"length1":39,"length2":42},{"diffs":[[0," return "],[-1,"x_value"],[1,"retrieve()"],[0,";\r\n\t} el"]],"start1":1951,"start2":1951,"length1":23,"length2":26}]],"length":2603,"saved":false}
{"ts":1363703441024,"patch":[[{"diffs":[[0,"        "],[1,"return (retrieve() + left->sum() + right->sum())"],[0,"\r\n\t}\r\n}\r"]],"start1":2145,"start2":2145,"length1":16,"length2":64}]],"length":2651,"saved":false}
{"ts":1363703445591,"patch":[[{"diffs":[[0,"->sum())"],[1,";"],[0,"\r\n\t}\r\n}\r"]],"start1":2193,"start2":2193,"length1":16,"length2":17}]],"length":2652,"saved":false}
{"ts":1363703558884,"patch":[[{"diffs":[[0,"lse;\r\n\t}"],[-1,"\r\n"],[1," else if (this == x) {\r\n        \r\n\t}"],[0,"\r\n\tretur"]],"start1":2340,"start2":2340,"length1":18,"length2":52}]],"length":2686,"saved":false}
{"ts":1363704164075,"patch":[[{"diffs":[[0,"alse;\r\n\t"],[-1,"} else "],[0,"if (this"]],"start1":2339,"start2":2339,"length1":23,"length2":16},{"diffs":[[0,"is == x)"],[-1," {"],[0,"\r\n      "]],"start1":2353,"start2":2353,"length1":18,"length2":16},{"diffs":[[0,"    "],[-1,"\r\n\t}\r\n\treturn false;"],[1,"return true;\r\n\t}\r\n    if (){\r\n        \r\n\t}"],[0,"\r\n}\r"]],"start1":2367,"start2":2367,"length1":28,"length2":50}]],"length":2699,"saved":false}
{"ts":1363704166688,"patch":[[{"diffs":[[0,"   if ()"],[1," "],[0,"{\r\n     "]],"start1":2390,"start2":2390,"length1":16,"length2":17}]],"length":2700,"saved":false}
{"ts":1363704172380,"patch":[[{"diffs":[[0,"rue;\r\n\t}"],[-1,"\r\n   "],[0," if () {"]],"start1":2379,"start2":2379,"length1":21,"length2":16}]],"length":2695,"saved":false}
{"ts":1363704173960,"patch":[[{"diffs":[[0,"ue;\r\n\t} "],[1,"\r\n    \r\n    "],[0,"if () {\r"]],"start1":2380,"start2":2380,"length1":16,"length2":28}]],"length":2707,"saved":false}
{"ts":1363704737187,"patch":[[{"diffs":[[0,"false;\r\n"],[1,"    }\r\n    \r\n"],[0,"\tif (thi"]],"start1":2338,"start2":2338,"length1":16,"length2":29},{"diffs":[[0,"is == x)"],[1," {"],[0,"\r\n      "]],"start1":2366,"start2":2366,"length1":16,"length2":18}]],"length":2722,"saved":false}
{"ts":1363704909737,"patch":[[{"diffs":[[0,"    if ("],[1,"x > retrieve()"],[0,") {\r\n   "]],"start1":2411,"start2":2411,"length1":16,"length2":30}]],"length":2736,"saved":false}
{"ts":1363704941629,"patch":[[{"diffs":[[0,"        "],[1,"return right->member;\r\n\t} else {\r\n        return left->member;"],[0,"\r\n\t}\r\n}\r"]],"start1":2438,"start2":2438,"length1":16,"length2":78}]],"length":2798,"saved":false}
{"ts":1363704945914,"patch":[[{"diffs":[[0,"ight->member"],[1,"(x)"],[0,";\r\n\t} else {"]],"start1":2454,"start2":2454,"length1":24,"length2":27},{"diffs":[[0,"->member"],[1,"(x)"],[0,";\r\n\t}\r\n}"]],"start1":2502,"start2":2502,"length1":16,"length2":19}]],"length":2804,"saved":false}
{"ts":1363705105779,"patch":[[{"diffs":[[0," \r\n\tif ("],[-1,"this"],[1,"retrieve"],[0," == x) {"]],"start1":2356,"start2":2356,"length1":20,"length2":24}]],"length":2808,"saved":false}
{"ts":1363705110246,"patch":[[{"diffs":[[0,"retrieve"],[1,"()"],[0," == x) {"]],"start1":2364,"start2":2364,"length1":16,"length2":18}]],"length":2810,"saved":false}
{"contributors":[],"silentsave":false,"ts":1363870178731,"patch":[[{"diffs":[[0,"nst {\r\n\tif ("],[1,"this->"],[0,"get_right() "]],"start1":1911,"start2":1911,"length1":24,"length2":30}]],"length":2816,"saved":false}
{"ts":1363870196363,"patch":[[{"diffs":[[0,"{\r\n\tif ("],[1,"this->"],[0,"get_left"]],"start1":1735,"start2":1735,"length1":16,"length2":22}]],"length":2822,"saved":false}
{"ts":1363870861579,"patch":[[{"diffs":[[0,"\n    }\r\n"],[-1,"    \r\n"],[0,"\tif (ret"]],"start1":2357,"start2":2357,"length1":22,"length2":16}]],"length":2816,"saved":false}
{"ts":1363870912094,"patch":[[{"diffs":[[0,"\treturn "],[-1,"x_value"],[1,"this->retrieve()"],[0,";\r\n}\r\n\r\n"]],"start1":1389,"start2":1389,"length1":23,"length2":32}]],"length":2825,"saved":false}
{"ts":1363870957921,"patch":[[{"diffs":[[0," return "],[1,"this->get_"],[0,"left"],[1,"()"],[0,"->min();"]],"start1":1824,"start2":1824,"length1":20,"length2":32},{"diffs":[[0," return "],[1,"this->get_"],[0,"right"],[1,"()"],[0,"->max();"]],"start1":2023,"start2":2023,"length1":21,"length2":33}]],"length":2849,"saved":false}
{"ts":1363870982664,"patch":[[{"diffs":[[0,"eve() + "],[1,"this->get_"],[0,"left"],[1,"()"],[0,"->sum() "]],"start1":2211,"start2":2211,"length1":20,"length2":32},{"diffs":[[0,"sum() + "],[1,"this->get_"],[0,"right"],[1,"()"],[0,"->sum())"]],"start1":2237,"start2":2237,"length1":21,"length2":33}]],"length":2873,"saved":false}
{"ts":1363870992662,"patch":[[{"diffs":[[0,"return ("],[1,"this->"],[0,"retrieve"]],"start1":2198,"start2":2198,"length1":16,"length2":22},{"diffs":[[0,"()->sum() + "],[1,"\r\n                "],[0,"this->get_ri"]],"start1":2239,"start2":2239,"length1":24,"length2":42}]],"length":2897,"saved":false}
{"ts":1363870998438,"patch":[[{"diffs":[[0,"}\r\n\tif ("],[1,"this->"],[0,"retrieve"]],"start1":2443,"start2":2443,"length1":16,"length2":22}]],"length":2903,"saved":false}
{"ts":1363871022753,"patch":[[{"diffs":[[0,"  if (x "],[1,"< this-"],[0,">"],[-1," "],[0,"retrieve"]],"start1":2512,"start2":2512,"length1":18,"length2":24},{"diffs":[[0," return "],[-1,"right"],[1,"this->get_left()"],[0,"->member"]],"start1":2550,"start2":2550,"length1":21,"length2":32},{"diffs":[[0," return "],[-1,"left"],[1,"this->get_right()"],[0,"->member"]],"start1":2606,"start2":2606,"length1":20,"length2":33}]],"length":2933,"saved":false}
