{"ts":1364913724217,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1364913738374,"patch":[[{"diffs":[[1,"#ifndef WEIGHTED_GRAPH_H\r\n#define WEIGHTED_GRAPH_H\r\n\r\n#include <iostream>\r\n#include <limits>\r\n\r\n/*****************************************\r\n * UW User ID:  uwuserid\r\n * Submitted for ECE 250\r\n * Semester of Submission:  (Winter|Spring|Fall) 20NN\r\n *\r\n * By submitting this file, I affirm that\r\n * I am the author of all modifications to\r\n *  the provided code.\r\n *****************************************/\r\n\r\n// include whatever classes you want\r\n\r\nclass Weighted_graph {\r\n    private:\r\n\t\t// your implementation here\r\n\t\tstatic const double INF;\r\n\r\n\tpublic:\r\n\t\tWeighted_graph( int = 50 );\r\n\t\t~Weighted_graph();\r\n\r\n\t\tint degree( int ) const;\r\n\t\tint edge_count() const;\r\n\t\tdouble adjacent( int, int ) const;\r\n\t\tdouble distance( int, int ) const;\r\n\r\n\t\tvoid insert( int, int, double );\r\n};\r\n\r\nconst double Weighted_graph::INF = std::numeric_limits<double>::infinity();\r\n\r\n// Your implementation here\r\n\r\n#endif"]],"start1":0,"start2":0,"length1":0,"length2":904}]],"length":904,"saved":false}
{"ts":1364913859223,"patch":[[{"diffs":[[0,"\r\n\r\n"],[-1,"// Your implementation here"],[0,"\r\n\r\n"]],"start1":863,"start2":863,"length1":35,"length2":8}]],"length":877,"saved":false}
{"ts":1364914038121,"patch":[[{"diffs":[[0,"y();\r\n\r\n"],[1,"Weighted_graph::Weighted_graph() {\r\n    \r\n}"],[0,"\r\n\r\n#end"]],"start1":859,"start2":859,"length1":16,"length2":59}]],"length":920,"saved":false}
{"ts":1364914044051,"patch":[[{"diffs":[[0," {\r\n    "],[1,"//empty constructor"],[0,"\r\n}\r\n\r\n#"]],"start1":899,"start2":899,"length1":16,"length2":35}]],"length":939,"saved":false}
{"ts":1364914590744,"patch":[[{"diffs":[[0,"d_graph("],[1,"int n"],[0,") {\r\n   "]],"start1":890,"start2":890,"length1":16,"length2":21},{"diffs":[[0,"    "],[-1,"//empty constructor"],[1,"\r\n    if (n <= 0) {\r\n        \r\n    }"],[0,"\r\n}\r"]],"start1":908,"start2":908,"length1":27,"length2":44}]],"length":961,"saved":false}
{"ts":1364915380149,"patch":[[{"diffs":[[0,"le INF;\r"],[1,"\n        int vertice;\r"],[0,"\n\r\n\tpubl"]],"start1":537,"start2":537,"length1":16,"length2":38}]],"length":983,"saved":false}
{"ts":1364915383839,"patch":[[{"diffs":[[0," {\r\n        "],[1,"vertice = n;"],[0,"\r\n    }\r\n}\r\n"]],"start1":951,"start2":951,"length1":24,"length2":36}]],"length":995,"saved":false}
{"ts":1364915412978,"patch":[[{"diffs":[[0,"}\r\n}\r\n\r\n"],[1,"\r\n\r\n"],[0,"#endif"]],"start1":981,"start2":981,"length1":14,"length2":18}]],"length":999,"saved":false}
{"ts":1364915432971,"patch":[[{"diffs":[[0,"}\r\n}\r\n\r\n"],[1,"Weighted_graph"],[0,"\r\n\r\n#end"]],"start1":981,"start2":981,"length1":16,"length2":30}]],"length":1013,"saved":false}
{"ts":1364915475878,"patch":[[{"diffs":[[0,"ed_graph"],[1,"::~Weighted_graph() {\r\n    \r\n}"],[0,"\r\n\r\n#end"]],"start1":995,"start2":995,"length1":16,"length2":46}]],"length":1043,"saved":false}
{"ts":1364915481992,"patch":[[{"diffs":[[0," {\r\n    "],[1,"//destructor"],[0,"\r\n}\r\n\r\n#"]],"start1":1022,"start2":1022,"length1":16,"length2":28}]],"length":1055,"saved":false}
{"ts":1364915541661,"patch":[[{"diffs":[[0,"r\r\n}\r\n\r\n"],[1,"int Weighted_graph::degree(int n) {\r\n    \r\n}\r\n\r\n"],[0,"#endif"]],"start1":1041,"start2":1041,"length1":14,"length2":62}]],"length":1103,"saved":false}
{"ts":1364915616489,"patch":[[{"diffs":[[0,"ertice;\r"],[1,"\n        double \r"],[0,"\n\r\n\tpubl"]],"start1":559,"start2":559,"length1":16,"length2":33}]],"length":1120,"saved":false}
