{"ts":1364913724217,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1364913738374,"patch":[[{"diffs":[[1,"#ifndef WEIGHTED_GRAPH_H\r\n#define WEIGHTED_GRAPH_H\r\n\r\n#include <iostream>\r\n#include <limits>\r\n\r\n/*****************************************\r\n * UW User ID:  uwuserid\r\n * Submitted for ECE 250\r\n * Semester of Submission:  (Winter|Spring|Fall) 20NN\r\n *\r\n * By submitting this file, I affirm that\r\n * I am the author of all modifications to\r\n *  the provided code.\r\n *****************************************/\r\n\r\n// include whatever classes you want\r\n\r\nclass Weighted_graph {\r\n    private:\r\n\t\t// your implementation here\r\n\t\tstatic const double INF;\r\n\r\n\tpublic:\r\n\t\tWeighted_graph( int = 50 );\r\n\t\t~Weighted_graph();\r\n\r\n\t\tint degree( int ) const;\r\n\t\tint edge_count() const;\r\n\t\tdouble adjacent( int, int ) const;\r\n\t\tdouble distance( int, int ) const;\r\n\r\n\t\tvoid insert( int, int, double );\r\n};\r\n\r\nconst double Weighted_graph::INF = std::numeric_limits<double>::infinity();\r\n\r\n// Your implementation here\r\n\r\n#endif"]],"start1":0,"start2":0,"length1":0,"length2":904}]],"length":904,"saved":false}
{"ts":1364913859223,"patch":[[{"diffs":[[0,"\r\n\r\n"],[-1,"// Your implementation here"],[0,"\r\n\r\n"]],"start1":863,"start2":863,"length1":35,"length2":8}]],"length":877,"saved":false}
{"ts":1364914038121,"patch":[[{"diffs":[[0,"y();\r\n\r\n"],[1,"Weighted_graph::Weighted_graph() {\r\n    \r\n}"],[0,"\r\n\r\n#end"]],"start1":859,"start2":859,"length1":16,"length2":59}]],"length":920,"saved":false}
{"ts":1364914044051,"patch":[[{"diffs":[[0," {\r\n    "],[1,"//empty constructor"],[0,"\r\n}\r\n\r\n#"]],"start1":899,"start2":899,"length1":16,"length2":35}]],"length":939,"saved":false}
{"ts":1364914590744,"patch":[[{"diffs":[[0,"d_graph("],[1,"int n"],[0,") {\r\n   "]],"start1":890,"start2":890,"length1":16,"length2":21},{"diffs":[[0,"    "],[-1,"//empty constructor"],[1,"\r\n    if (n <= 0) {\r\n        \r\n    }"],[0,"\r\n}\r"]],"start1":908,"start2":908,"length1":27,"length2":44}]],"length":961,"saved":false}
{"ts":1364915380149,"patch":[[{"diffs":[[0,"le INF;\r"],[1,"\n        int vertice;\r"],[0,"\n\r\n\tpubl"]],"start1":537,"start2":537,"length1":16,"length2":38}]],"length":983,"saved":false}
{"ts":1364915383839,"patch":[[{"diffs":[[0," {\r\n        "],[1,"vertice = n;"],[0,"\r\n    }\r\n}\r\n"]],"start1":951,"start2":951,"length1":24,"length2":36}]],"length":995,"saved":false}
{"ts":1364915412978,"patch":[[{"diffs":[[0,"}\r\n}\r\n\r\n"],[1,"\r\n\r\n"],[0,"#endif"]],"start1":981,"start2":981,"length1":14,"length2":18}]],"length":999,"saved":false}
{"ts":1364915432971,"patch":[[{"diffs":[[0,"}\r\n}\r\n\r\n"],[1,"Weighted_graph"],[0,"\r\n\r\n#end"]],"start1":981,"start2":981,"length1":16,"length2":30}]],"length":1013,"saved":false}
{"ts":1364915475878,"patch":[[{"diffs":[[0,"ed_graph"],[1,"::~Weighted_graph() {\r\n    \r\n}"],[0,"\r\n\r\n#end"]],"start1":995,"start2":995,"length1":16,"length2":46}]],"length":1043,"saved":false}
{"ts":1364915481992,"patch":[[{"diffs":[[0," {\r\n    "],[1,"//destructor"],[0,"\r\n}\r\n\r\n#"]],"start1":1022,"start2":1022,"length1":16,"length2":28}]],"length":1055,"saved":false}
{"ts":1364915541661,"patch":[[{"diffs":[[0,"r\r\n}\r\n\r\n"],[1,"int Weighted_graph::degree(int n) {\r\n    \r\n}\r\n\r\n"],[0,"#endif"]],"start1":1041,"start2":1041,"length1":14,"length2":62}]],"length":1103,"saved":false}
{"ts":1364915616489,"patch":[[{"diffs":[[0,"ertice;\r"],[1,"\n        double \r"],[0,"\n\r\n\tpubl"]],"start1":559,"start2":559,"length1":16,"length2":33}]],"length":1120,"saved":false}
{"contributors":[],"silentsave":false,"ts":1364954064710,"patch":[[{"diffs":[[0,"  double"],[-1," "],[1,"[] matrix;"],[0,"\r\n\r\n\tpub"]],"start1":574,"start2":574,"length1":17,"length2":26}]],"length":1129,"saved":false}
{"ts":1364954094752,"patch":[[{"diffs":[[0,"e = "],[-1,"n;"],[1,"1;\r\n        matrix = new "],[0,"\r\n  "]],"start1":995,"start2":995,"length1":10,"length2":33}]],"length":1152,"saved":false}
{"ts":1364954137800,"patch":[[{"diffs":[[0,"x = new "],[1,"double[1]"],[0,"\r\n    }\r"]],"start1":1016,"start2":1016,"length1":16,"length2":25}]],"length":1161,"saved":false}
{"ts":1364954144636,"patch":[[{"diffs":[[0,"ouble[1]"],[1,";"],[0,"\r\n    }\r"]],"start1":1025,"start2":1025,"length1":16,"length2":17}]],"length":1162,"saved":false}
{"ts":1364954170013,"patch":[[{"diffs":[[0,"le[1];\r\n"],[1,"        matrix[1] = new double[1];\r\n"],[0,"    }\r\n}"]],"start1":1028,"start2":1028,"length1":16,"length2":52}]],"length":1198,"saved":false}
{"ts":1364954212706,"patch":[[{"diffs":[[0,"rix = new double"],[1,"*"],[0,"[1];\r\n        ma"]],"start1":1014,"start2":1014,"length1":32,"length2":33}]],"length":1199,"saved":false}
{"ts":1364954238532,"patch":[[{"diffs":[[0,"uble"],[-1,"[] "],[1," **"],[0,"matr"]],"start1":578,"start2":578,"length1":11,"length2":11}]],"length":1199,"saved":false}
{"ts":1364954289081,"patch":[[{"diffs":[[0,"(n <= 0) {\r\n"],[1,"        \r\n"],[0,"        vert"]],"start1":969,"start2":969,"length1":24,"length2":34},{"diffs":[[0,"];\r\n    "],[-1,"}"],[1,"\r\n    } else {\r\n        \r\n        \r\n    }\r\n    "],[0,"\r\n}\r\n\r\nW"]],"start1":1079,"start2":1079,"length1":17,"length2":63}]],"length":1255,"saved":false}
{"ts":1364954331559,"patch":[[{"diffs":[[0,"  \r\n        "],[1,"matrix = new double*[n];\r\n        for (int i=0; i<n; i++) {\r\n            matrix[i] = new double[n];\r\n        }"],[0,"\r\n    }\r\n   "]],"start1":1109,"start2":1109,"length1":24,"length2":134}]],"length":1365,"saved":false}
{"ts":1364954613881,"patch":[[{"diffs":[[0,"    "],[-1,"//destructor"],[1,"for (int i=0; i<)"],[0,"\r\n}\r"]],"start1":1288,"start2":1288,"length1":20,"length2":25}]],"length":1370,"saved":false}
{"ts":1364954627410,"patch":[[{"diffs":[[0,"se {\r\n        \r\n"],[1,"        vertice = n;\r\n"],[0,"        matrix ="]],"start1":1097,"start2":1097,"length1":32,"length2":54},{"diffs":[[0,"nt i=0; "],[-1,"i<"],[1,"vertice"],[0,")\r\n}\r\n\r\n"]],"start1":1320,"start2":1320,"length1":18,"length2":23}]],"length":1397,"saved":false}
{"ts":1364954642344,"patch":[[{"diffs":[[0,"=0; "],[1,"i<"],[0,"vertice"],[-1,")"],[1,"; i++) {\r\n        \r\n    }"],[0,"\r\n}\r"]],"start1":1324,"start2":1324,"length1":16,"length2":42}]],"length":1423,"saved":false}
{"ts":1364954653683,"patch":[[{"diffs":[[0," {\r\n        "],[1,"delete[] matrix[i]"],[0,"\r\n    }\r\n}\r\n"]],"start1":1343,"start2":1343,"length1":24,"length2":42}]],"length":1441,"saved":false}
{"ts":1364954655261,"patch":[[{"diffs":[[0,"atrix[i]"],[1,";"],[0,"\r\n    }\r"]],"start1":1365,"start2":1365,"length1":16,"length2":17}]],"length":1442,"saved":false}
{"ts":1364954845190,"patch":[[{"diffs":[[0," \r\n}\r\n\r\n"],[1,"int Weighted_graph::edge_cout()\r\n\r\n"],[0,"#endif"]],"start1":1428,"start2":1428,"length1":14,"length2":49}]],"length":1477,"saved":false}
{"ts":1364954855488,"patch":[[{"diffs":[[0,"e_cout()"],[1,"const"],[0,"\r\n\r\n#end"]],"start1":1459,"start2":1459,"length1":16,"length2":21}]],"length":1482,"saved":false}
{"ts":1364954858056,"patch":[[{"diffs":[[0,"e_cout()"],[1," "],[0,"const\r\n\r"]],"start1":1459,"start2":1459,"length1":16,"length2":17}]],"length":1483,"saved":false}
{"ts":1364954867094,"patch":[[{"diffs":[[0,"egree(int n)"],[1," const"],[0," {\r\n    \r\n}\r"]],"start1":1409,"start2":1409,"length1":24,"length2":30}]],"length":1489,"saved":false}
{"ts":1364954869686,"patch":[[{"diffs":[[0,"() const"],[1," {\r\n    \r\n}"],[0,"\r\n\r\n#end"]],"start1":1471,"start2":1471,"length1":16,"length2":27}]],"length":1500,"saved":false}
{"ts":1364954884070,"patch":[[{"diffs":[[0,"rtice;\r\n"],[1,"        int edges;\r\n"],[0,"        "]],"start1":560,"start2":560,"length1":16,"length2":36}]],"length":1520,"saved":false}
{"ts":1364954895889,"patch":[[{"diffs":[[0,"h(int n)"],[1,":"],[0," {\r\n    "]],"start1":964,"start2":964,"length1":16,"length2":17}]],"length":1521,"saved":false}
{"ts":1364954962377,"patch":[[{"diffs":[[0,"int n): "],[1,"\r\n(vertice = n) "],[0,"{\r\n    \r"]],"start1":966,"start2":966,"length1":16,"length2":32}]],"length":1537,"saved":false}
{"ts":1364954974540,"patch":[[{"diffs":[[0,"ice = n)"],[-1," "],[1,", (edges = 0)"],[0,"{\r\n    \r"]],"start1":981,"start2":981,"length1":17,"length2":29}]],"length":1549,"saved":false}
{"ts":1364954990359,"patch":[[{"diffs":[[0,"ges = 0)"],[1," "],[0,"{\r\n"],[-1,""],[0,"    \r\n  "]],"start1":994,"start2":994,"length1":19,"length2":20},{"diffs":[[0,"];\r\n"],[1,""],[0,"    \r\n"],[-1,"    } else {\r\n        \r\n        vertice = n;\r\n        matrix = new double*[n];\r\n        for (int i=0; i<n; i++) {\r\n            matrix[i] = new double[n];\r\n        }\r\n"],[0,"    "]],"start1":1129,"start2":1129,"length1":180,"length2":14}]],"length":1384,"saved":false}
{"ts":1364954993890,"patch":[[{"diffs":[[0,"\n    }\r\n"],[-1,"    \r\n"],[0,"}\r\n\r\nWei"]],"start1":1138,"start2":1138,"length1":22,"length2":16}]],"length":1378,"saved":false}
