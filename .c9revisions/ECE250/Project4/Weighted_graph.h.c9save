{"ts":1364913724217,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1364913738374,"patch":[[{"diffs":[[1,"#ifndef WEIGHTED_GRAPH_H\r\n#define WEIGHTED_GRAPH_H\r\n\r\n#include <iostream>\r\n#include <limits>\r\n\r\n/*****************************************\r\n * UW User ID:  uwuserid\r\n * Submitted for ECE 250\r\n * Semester of Submission:  (Winter|Spring|Fall) 20NN\r\n *\r\n * By submitting this file, I affirm that\r\n * I am the author of all modifications to\r\n *  the provided code.\r\n *****************************************/\r\n\r\n// include whatever classes you want\r\n\r\nclass Weighted_graph {\r\n    private:\r\n\t\t// your implementation here\r\n\t\tstatic const double INF;\r\n\r\n\tpublic:\r\n\t\tWeighted_graph( int = 50 );\r\n\t\t~Weighted_graph();\r\n\r\n\t\tint degree( int ) const;\r\n\t\tint edge_count() const;\r\n\t\tdouble adjacent( int, int ) const;\r\n\t\tdouble distance( int, int ) const;\r\n\r\n\t\tvoid insert( int, int, double );\r\n};\r\n\r\nconst double Weighted_graph::INF = std::numeric_limits<double>::infinity();\r\n\r\n// Your implementation here\r\n\r\n#endif"]],"start1":0,"start2":0,"length1":0,"length2":904}]],"length":904,"saved":false}
{"ts":1364913859223,"patch":[[{"diffs":[[0,"\r\n\r\n"],[-1,"// Your implementation here"],[0,"\r\n\r\n"]],"start1":863,"start2":863,"length1":35,"length2":8}]],"length":877,"saved":false}
{"ts":1364914038121,"patch":[[{"diffs":[[0,"y();\r\n\r\n"],[1,"Weighted_graph::Weighted_graph() {\r\n    \r\n}"],[0,"\r\n\r\n#end"]],"start1":859,"start2":859,"length1":16,"length2":59}]],"length":920,"saved":false}
{"ts":1364914044051,"patch":[[{"diffs":[[0," {\r\n    "],[1,"//empty constructor"],[0,"\r\n}\r\n\r\n#"]],"start1":899,"start2":899,"length1":16,"length2":35}]],"length":939,"saved":false}
{"ts":1364914590744,"patch":[[{"diffs":[[0,"d_graph("],[1,"int n"],[0,") {\r\n   "]],"start1":890,"start2":890,"length1":16,"length2":21},{"diffs":[[0,"    "],[-1,"//empty constructor"],[1,"\r\n    if (n <= 0) {\r\n        \r\n    }"],[0,"\r\n}\r"]],"start1":908,"start2":908,"length1":27,"length2":44}]],"length":961,"saved":false}
{"ts":1364915380149,"patch":[[{"diffs":[[0,"le INF;\r"],[1,"\n        int vertice;\r"],[0,"\n\r\n\tpubl"]],"start1":537,"start2":537,"length1":16,"length2":38}]],"length":983,"saved":false}
{"ts":1364915383839,"patch":[[{"diffs":[[0," {\r\n        "],[1,"vertice = n;"],[0,"\r\n    }\r\n}\r\n"]],"start1":951,"start2":951,"length1":24,"length2":36}]],"length":995,"saved":false}
{"ts":1364915412978,"patch":[[{"diffs":[[0,"}\r\n}\r\n\r\n"],[1,"\r\n\r\n"],[0,"#endif"]],"start1":981,"start2":981,"length1":14,"length2":18}]],"length":999,"saved":false}
{"ts":1364915432971,"patch":[[{"diffs":[[0,"}\r\n}\r\n\r\n"],[1,"Weighted_graph"],[0,"\r\n\r\n#end"]],"start1":981,"start2":981,"length1":16,"length2":30}]],"length":1013,"saved":false}
{"ts":1364915475878,"patch":[[{"diffs":[[0,"ed_graph"],[1,"::~Weighted_graph() {\r\n    \r\n}"],[0,"\r\n\r\n#end"]],"start1":995,"start2":995,"length1":16,"length2":46}]],"length":1043,"saved":false}
{"ts":1364915481992,"patch":[[{"diffs":[[0," {\r\n    "],[1,"//destructor"],[0,"\r\n}\r\n\r\n#"]],"start1":1022,"start2":1022,"length1":16,"length2":28}]],"length":1055,"saved":false}
{"ts":1364915541661,"patch":[[{"diffs":[[0,"r\r\n}\r\n\r\n"],[1,"int Weighted_graph::degree(int n) {\r\n    \r\n}\r\n\r\n"],[0,"#endif"]],"start1":1041,"start2":1041,"length1":14,"length2":62}]],"length":1103,"saved":false}
{"ts":1364915616489,"patch":[[{"diffs":[[0,"ertice;\r"],[1,"\n        double \r"],[0,"\n\r\n\tpubl"]],"start1":559,"start2":559,"length1":16,"length2":33}]],"length":1120,"saved":false}
{"contributors":[],"silentsave":false,"ts":1364954064710,"patch":[[{"diffs":[[0,"  double"],[-1," "],[1,"[] matrix;"],[0,"\r\n\r\n\tpub"]],"start1":574,"start2":574,"length1":17,"length2":26}]],"length":1129,"saved":false}
{"ts":1364954094752,"patch":[[{"diffs":[[0,"e = "],[-1,"n;"],[1,"1;\r\n        matrix = new "],[0,"\r\n  "]],"start1":995,"start2":995,"length1":10,"length2":33}]],"length":1152,"saved":false}
{"ts":1364954137800,"patch":[[{"diffs":[[0,"x = new "],[1,"double[1]"],[0,"\r\n    }\r"]],"start1":1016,"start2":1016,"length1":16,"length2":25}]],"length":1161,"saved":false}
{"ts":1364954144636,"patch":[[{"diffs":[[0,"ouble[1]"],[1,";"],[0,"\r\n    }\r"]],"start1":1025,"start2":1025,"length1":16,"length2":17}]],"length":1162,"saved":false}
{"ts":1364954170013,"patch":[[{"diffs":[[0,"le[1];\r\n"],[1,"        matrix[1] = new double[1];\r\n"],[0,"    }\r\n}"]],"start1":1028,"start2":1028,"length1":16,"length2":52}]],"length":1198,"saved":false}
{"ts":1364954212706,"patch":[[{"diffs":[[0,"rix = new double"],[1,"*"],[0,"[1];\r\n        ma"]],"start1":1014,"start2":1014,"length1":32,"length2":33}]],"length":1199,"saved":false}
{"ts":1364954238532,"patch":[[{"diffs":[[0,"uble"],[-1,"[] "],[1," **"],[0,"matr"]],"start1":578,"start2":578,"length1":11,"length2":11}]],"length":1199,"saved":false}
{"ts":1364954289081,"patch":[[{"diffs":[[0,"(n <= 0) {\r\n"],[1,"        \r\n"],[0,"        vert"]],"start1":969,"start2":969,"length1":24,"length2":34},{"diffs":[[0,"];\r\n    "],[-1,"}"],[1,"\r\n    } else {\r\n        \r\n        \r\n    }\r\n    "],[0,"\r\n}\r\n\r\nW"]],"start1":1079,"start2":1079,"length1":17,"length2":63}]],"length":1255,"saved":false}
{"ts":1364954331559,"patch":[[{"diffs":[[0,"  \r\n        "],[1,"matrix = new double*[n];\r\n        for (int i=0; i<n; i++) {\r\n            matrix[i] = new double[n];\r\n        }"],[0,"\r\n    }\r\n   "]],"start1":1109,"start2":1109,"length1":24,"length2":134}]],"length":1365,"saved":false}
{"ts":1364954613881,"patch":[[{"diffs":[[0,"    "],[-1,"//destructor"],[1,"for (int i=0; i<)"],[0,"\r\n}\r"]],"start1":1288,"start2":1288,"length1":20,"length2":25}]],"length":1370,"saved":false}
{"ts":1364954627410,"patch":[[{"diffs":[[0,"se {\r\n        \r\n"],[1,"        vertice = n;\r\n"],[0,"        matrix ="]],"start1":1097,"start2":1097,"length1":32,"length2":54},{"diffs":[[0,"nt i=0; "],[-1,"i<"],[1,"vertice"],[0,")\r\n}\r\n\r\n"]],"start1":1320,"start2":1320,"length1":18,"length2":23}]],"length":1397,"saved":false}
{"ts":1364954642344,"patch":[[{"diffs":[[0,"=0; "],[1,"i<"],[0,"vertice"],[-1,")"],[1,"; i++) {\r\n        \r\n    }"],[0,"\r\n}\r"]],"start1":1324,"start2":1324,"length1":16,"length2":42}]],"length":1423,"saved":false}
{"ts":1364954653683,"patch":[[{"diffs":[[0," {\r\n        "],[1,"delete[] matrix[i]"],[0,"\r\n    }\r\n}\r\n"]],"start1":1343,"start2":1343,"length1":24,"length2":42}]],"length":1441,"saved":false}
{"ts":1364954655261,"patch":[[{"diffs":[[0,"atrix[i]"],[1,";"],[0,"\r\n    }\r"]],"start1":1365,"start2":1365,"length1":16,"length2":17}]],"length":1442,"saved":false}
{"ts":1364954845190,"patch":[[{"diffs":[[0," \r\n}\r\n\r\n"],[1,"int Weighted_graph::edge_cout()\r\n\r\n"],[0,"#endif"]],"start1":1428,"start2":1428,"length1":14,"length2":49}]],"length":1477,"saved":false}
{"ts":1364954855488,"patch":[[{"diffs":[[0,"e_cout()"],[1,"const"],[0,"\r\n\r\n#end"]],"start1":1459,"start2":1459,"length1":16,"length2":21}]],"length":1482,"saved":false}
{"ts":1364954858056,"patch":[[{"diffs":[[0,"e_cout()"],[1," "],[0,"const\r\n\r"]],"start1":1459,"start2":1459,"length1":16,"length2":17}]],"length":1483,"saved":false}
{"ts":1364954867094,"patch":[[{"diffs":[[0,"egree(int n)"],[1," const"],[0," {\r\n    \r\n}\r"]],"start1":1409,"start2":1409,"length1":24,"length2":30}]],"length":1489,"saved":false}
{"ts":1364954869686,"patch":[[{"diffs":[[0,"() const"],[1," {\r\n    \r\n}"],[0,"\r\n\r\n#end"]],"start1":1471,"start2":1471,"length1":16,"length2":27}]],"length":1500,"saved":false}
{"ts":1364954884070,"patch":[[{"diffs":[[0,"rtice;\r\n"],[1,"        int edges;\r\n"],[0,"        "]],"start1":560,"start2":560,"length1":16,"length2":36}]],"length":1520,"saved":false}
{"ts":1364954895889,"patch":[[{"diffs":[[0,"h(int n)"],[1,":"],[0," {\r\n    "]],"start1":964,"start2":964,"length1":16,"length2":17}]],"length":1521,"saved":false}
{"ts":1364954962377,"patch":[[{"diffs":[[0,"int n): "],[1,"\r\n(vertice = n) "],[0,"{\r\n    \r"]],"start1":966,"start2":966,"length1":16,"length2":32}]],"length":1537,"saved":false}
{"ts":1364954974540,"patch":[[{"diffs":[[0,"ice = n)"],[-1," "],[1,", (edges = 0)"],[0,"{\r\n    \r"]],"start1":981,"start2":981,"length1":17,"length2":29}]],"length":1549,"saved":false}
{"ts":1364954990359,"patch":[[{"diffs":[[0,"ges = 0)"],[1," "],[0,"{\r\n"],[-1,""],[0,"    \r\n  "]],"start1":994,"start2":994,"length1":19,"length2":20},{"diffs":[[0,"];\r\n"],[1,""],[0,"    \r\n"],[-1,"    } else {\r\n        \r\n        vertice = n;\r\n        matrix = new double*[n];\r\n        for (int i=0; i<n; i++) {\r\n            matrix[i] = new double[n];\r\n        }\r\n"],[0,"    "]],"start1":1129,"start2":1129,"length1":180,"length2":14}]],"length":1384,"saved":false}
{"ts":1364954993890,"patch":[[{"diffs":[[0,"\n    }\r\n"],[-1,"    \r\n"],[0,"}\r\n\r\nWei"]],"start1":1138,"start2":1138,"length1":22,"length2":16}]],"length":1378,"saved":false}
{"contributors":[],"silentsave":false,"ts":1365080800883,"patch":[[{"diffs":[[0,"if (n <= 0) "],[-1,"{"],[0,"\r\n        \r\n"]],"start1":1016,"start2":1016,"length1":25,"length2":24},{"diffs":[[0,"    "],[-1,"\r\n        vertice = 1;\r\n        matrix = new double*[1];\r\n        matrix[1] = new double[1];\r\n    \r\n    }"],[1,"n = 1;"],[0,"\r\n}\r"]],"start1":1034,"start2":1034,"length1":113,"length2":14}]],"length":1278,"saved":false}
{"ts":1365080841661,"patch":[[{"diffs":[[0,"    int "],[-1,"vertice"],[1,"degrees"],[0,";\r\n     "]],"start1":550,"start2":550,"length1":23,"length2":23},{"diffs":[[0,"n = 1;\r\n"],[1,"        \r\n    \r\n"],[0,"}\r\n\r\nWei"]],"start1":1038,"start2":1038,"length1":16,"length2":32}]],"length":1294,"saved":false}
{"ts":1365080902301,"patch":[[{"diffs":[[0,": \r\n"],[-1,"(vertice = n), "],[0,"(edg"]],"start1":972,"start2":972,"length1":23,"length2":8},{"diffs":[[0,"      \r\n    "],[1,"for (int i=0; i<n; i++) {\r\n        matrix[i] = new double[n];\r\n    }"],[0,"\r\n}\r\n\r\nWeigh"]],"start1":1033,"start2":1033,"length1":24,"length2":92}]],"length":1347,"saved":false}
{"ts":1365080961561,"patch":[[{"diffs":[[0,"        int "],[1,"*"],[0,"degrees;\r\n  "]],"start1":546,"start2":546,"length1":24,"length2":25},{"diffs":[[0,"n];\r\n    }\r\n"],[1,"    \r\n"],[0,"}\r\n\r\nWeighte"]],"start1":1104,"start2":1104,"length1":24,"length2":30}]],"length":1354,"saved":false}
{"ts":1365080965706,"patch":[[{"diffs":[[0,"int "],[-1,"*degre"],[1,"edg"],[0,"es;\r"]],"start1":554,"start2":554,"length1":14,"length2":11},{"diffs":[[0,"s;\r\n        int "],[-1,"edg"],[1,"*degre"],[0,"es;\r\n        dou"]],"start1":562,"start2":562,"length1":35,"length2":38}]],"length":1354,"saved":false}
{"ts":1365080981797,"patch":[[{"diffs":[[0,"\n    }\r\n"],[1,"    degrees = new int[n];\r\n"],[0,"    \r\n}\r"]],"start1":1108,"start2":1108,"length1":16,"length2":43}]],"length":1381,"saved":false}
{"ts":1365081002707,"patch":[[{"diffs":[[0,"nt[n];\r\n"],[-1,"    \r\n"],[0,"}\r\n\r\nWei"]],"start1":1135,"start2":1135,"length1":22,"length2":16}]],"length":1375,"saved":false}
{"ts":1365081017569,"patch":[[{"diffs":[[0,"\n    }\r\n"],[1,"    \r\n"],[0,"    degr"]],"start1":1108,"start2":1108,"length1":16,"length2":22},{"diffs":[[0,"onst {\r\n    "],[1,"return degrees[n];"],[0,"\r\n}\r\n\r\nint W"]],"start1":1304,"start2":1304,"length1":24,"length2":42}]],"length":1399,"saved":false}
{"ts":1365081048647,"patch":[[{"diffs":[[0," {\r\n    "],[1,"return edges;"],[0,"\r\n}\r\n\r\n#"]],"start1":1378,"start2":1378,"length1":16,"length2":29}]],"length":1412,"saved":false}
{"ts":1365081050253,"patch":[[{"diffs":[[0,";\r\n}\r\n\r\n"],[1,"\r\n\r\n"],[0,"#endif"]],"start1":1398,"start2":1398,"length1":14,"length2":18}]],"length":1416,"saved":false}
{"ts":1365081107978,"patch":[[{"diffs":[[0,";\r\n}\r\n\r\n"],[1,"double Weighted_graph::adjacent(int m, int n) {\r\n    \r\n}"],[0,"\r\n\r\n#end"]],"start1":1398,"start2":1398,"length1":16,"length2":72}]],"length":1472,"saved":false}
{"ts":1365081116686,"patch":[[{"diffs":[[0," int n) "],[1,"const"],[0,"{\r\n    \r"]],"start1":1444,"start2":1444,"length1":16,"length2":21}]],"length":1477,"saved":false}
{"ts":1365081220888,"patch":[[{"diffs":[[0,"t{\r\n    "],[1,"if (matrix[m][n] == INF)\r\n        return 0.0;\r\n    else\r\n        return matrix[m][n];"],[0,"\r\n}\r\n\r\n#"]],"start1":1456,"start2":1456,"length1":16,"length2":101}]],"length":1562,"saved":false}
{"ts":1365081266166,"patch":[[{"diffs":[[0,"int edges;\r\n"],[1,"        int vertices;\r\n"],[0,"        int "]],"start1":554,"start2":554,"length1":24,"length2":47}]],"length":1585,"saved":false}
{"ts":1365081278183,"patch":[[{"diffs":[[0,"ew int[n];\r\n"],[1,"\r\n"],[0,"}\r\n\r\nWeighte"]],"start1":1160,"start2":1160,"length1":24,"length2":26}]],"length":1587,"saved":false}
{"ts":1365081322722,"patch":[[{"diffs":[[0,"t n): \r\n"],[1,"(vertices = n), "],[0,"(edges ="]],"start1":992,"start2":992,"length1":16,"length2":32}]],"length":1603,"saved":false}
{"ts":1365081373585,"patch":[[{"diffs":[[0,"nt[n];\r\n"],[-1,"\r\n"],[0,"}\r\n\r\nWei"]],"start1":1180,"start2":1180,"length1":18,"length2":16}]],"length":1601,"saved":false}
{"ts":1365081421701,"patch":[[{"diffs":[[0,"const{\r\n"],[1,"    if (m > vertices || n > vertices)\r\n        throw \r\n    \r\n"],[0,"    if ("]],"start1":1491,"start2":1491,"length1":16,"length2":77}]],"length":1662,"saved":false}
{"ts":1365081455422,"patch":[[{"diffs":[[0,"  throw "],[1,"illegal_argument"],[0,"\r\n    \r\n"]],"start1":1544,"start2":1544,"length1":16,"length2":32}]],"length":1678,"saved":false}
{"ts":1365081456712,"patch":[[{"diffs":[[0,"argument"],[1,"();"],[0,"\r\n    \r\n"]],"start1":1560,"start2":1560,"length1":16,"length2":19}]],"length":1681,"saved":false}
{"ts":1365081474078,"patch":[[{"diffs":[[0,"vertices"],[1," || m < 0 || n < 0"],[0,")\r\n     "]],"start1":1527,"start2":1527,"length1":16,"length2":34}]],"length":1699,"saved":false}
{"ts":1365081481617,"patch":[[{"diffs":[[0,"s || m <"],[1,"="],[0," 0 || n "]],"start1":1534,"start2":1534,"length1":16,"length2":17},{"diffs":[[0,"0 || n <"],[1,"="],[0," 0)\r\n   "]],"start1":1544,"start2":1544,"length1":16,"length2":17}]],"length":1701,"saved":false}
{"ts":1365081551093,"patch":[[{"diffs":[[0,"limits>\r"],[1,"\n#include \"Exception.h\"\r\n#include \"ece250\"\r"],[0,"\n\r\n/****"]],"start1":85,"start2":85,"length1":16,"length2":59}]],"length":1744,"saved":false}
{"ts":1365081607511,"patch":[[{"diffs":[[0,"int n) const {\r\n"],[1,"    if (n > vertices || n <= 0) \r\n        throw illegal_argument()\r\n    \r\n"],[0,"    return degre"]],"start1":1378,"start2":1378,"length1":32,"length2":106}]],"length":1818,"saved":false}
{"ts":1365081608035,"patch":[[{"diffs":[[0,"gument()"],[1,";"],[0,"\r\n    \r\n"]],"start1":1452,"start2":1452,"length1":16,"length2":17}]],"length":1819,"saved":false}
{"ts":1365081651208,"patch":[[{"diffs":[[0,"n) const"],[1," "],[0,"{\r\n    i"]],"start1":1606,"start2":1606,"length1":16,"length2":17},{"diffs":[[0,";\r\n}\r\n\r\n"],[1,"double Weighted_graph::distance(int m, int n) const {\r\n    \r\n}\r\n\r\n"],[0,"#endif"]],"start1":1806,"start2":1806,"length1":14,"length2":80}]],"length":1886,"saved":false}
{"ts":1365081692224,"patch":[[{"diffs":[[0," {\r\n    "],[1,"if (m > vertices || n > vertices || m <= 0 || n <= 0)\r\n        throw illegal_argument();"],[0,"\r\n}\r\n\r\n#"]],"start1":1865,"start2":1865,"length1":16,"length2":104}]],"length":1974,"saved":false}
{"ts":1365081694716,"patch":[[{"diffs":[[0,"ent();\r\n"],[1,"    \r\n    \r\n"],[0,"}\r\n\r\n#en"]],"start1":1955,"start2":1955,"length1":16,"length2":28}]],"length":1986,"saved":false}
{"ts":1365081977203,"patch":[[{"diffs":[[0,"matrix;\r"],[1,"\n        bool table_Validity;\r\n        double table_Distance;\r"],[0,"\n\r\n\tpubl"]],"start1":672,"start2":672,"length1":16,"length2":78}]],"length":2048,"saved":false}
{"ts":1365082029517,"patch":[[{"diffs":[[0,"ew int[n];\r\n"],[1,"    for (int i=0; i<n; i++) {\r\n        table_Validity\r\n"],[0,"}\r\n\r\nWeighte"]],"start1":1281,"start2":1281,"length1":24,"length2":79}]],"length":2103,"saved":false}
{"ts":1365082129753,"patch":[[{"diffs":[[0,": \r\n"],[-1,"("],[0,"vertices"],[-1," = "],[1,"("],[0,"n), "],[-1,"("],[0,"edges"],[-1," = 0) "],[1,"(0), table_Distance(new double[n])\r\ntable_Validity(new bool[n]),"],[0,"{\r\n "]],"start1":1101,"start2":1101,"length1":36,"length2":90}]],"length":2157,"saved":false}
{"ts":1365082175710,"patch":[[{"diffs":[[0,"ool[n]),"],[1," matrix(new double[n])"],[0,"{\r\n    \r"]],"start1":1179,"start2":1179,"length1":16,"length2":38}]],"length":2179,"saved":false}
{"ts":1365082207587,"patch":[[{"diffs":[[0,"w double"],[1," *"],[0,"[n])"],[1," "],[0,"{\r\n    \r"]],"start1":1197,"start2":1197,"length1":20,"length2":23}]],"length":2182,"saved":false}
{"ts":1365082232099,"patch":[[{"diffs":[[0,"   bool "],[1,"*"],[0,"table_Va"]],"start1":686,"start2":686,"length1":16,"length2":17},{"diffs":[[0," double "],[1,"*"],[0,"table_Di"]],"start1":719,"start2":719,"length1":16,"length2":17}]],"length":2184,"saved":false}
{"ts":1365082239100,"patch":[[{"diffs":[[0,"Validity"],[1," = false;"],[0,"\r\n}\r\n\r\nW"]],"start1":1419,"start2":1419,"length1":16,"length2":25}]],"length":2193,"saved":false}
{"ts":1365082240979,"patch":[[{"diffs":[[0,"false;\r\n"],[1,"    }\r\n"],[0,"}\r\n\r\nWei"]],"start1":1430,"start2":1430,"length1":16,"length2":23}]],"length":2200,"saved":false}
{"ts":1365082277913,"patch":[[{"diffs":[[0,"ces(n), "],[1,"\r\n"],[0,"edges(0)"]],"start1":1112,"start2":1112,"length1":16,"length2":18},{"diffs":[[0,"ges(0), "],[1,"\r\n"],[0,"table_Di"]],"start1":1124,"start2":1124,"length1":16,"length2":18},{"diffs":[[0,"uble[n])"],[1,","],[0,"\r\ntable_"]],"start1":1155,"start2":1155,"length1":16,"length2":17},{"diffs":[[0,"ol[n]), "],[1,"\r\n"],[0,"matrix(n"]],"start1":1187,"start2":1187,"length1":16,"length2":18},{"diffs":[[0,"le *[n])"],[1,",\r\ndegrees(new int[n])"],[0," {\r\n    "]],"start1":1212,"start2":1212,"length1":16,"length2":38},{"diffs":[[0,"se;\r\n    }\r\n"],[1,"    \r\n"],[0,"}\r\n\r\nWeighte"]],"start1":1462,"start2":1462,"length1":24,"length2":30}]],"length":2235,"saved":false}
{"ts":1365082281761,"patch":[[{"diffs":[[0,"  \r\n"],[-1,"    degrees = new int[n];\r\n"],[0,"    "]],"start1":1372,"start2":1372,"length1":35,"length2":8}]],"length":2208,"saved":false}
{"ts":1365082321202,"patch":[[{"diffs":[[0,"nt[n]) {\r\n    \r\n"],[1,"    vertices = n;\r\n    \r\n"],[0,"    if (n <= 0) "]],"start1":1236,"start2":1236,"length1":32,"length2":57}]],"length":2233,"saved":false}
{"ts":1365082379529,"patch":[[{"diffs":[[0,": \r\n"],[-1,"vertices(n), \r\n"],[0,"edge"]],"start1":1103,"start2":1103,"length1":23,"length2":8},{"diffs":[[0,"  \r\n"],[-1,"    vertices = n;\r\n    \r\n"],[0,"    "]],"start1":1233,"start2":1233,"length1":33,"length2":8},{"diffs":[[0,"\r\n        \r\n"],[1,"    vertices = n;\r\n    table_Distance = new double [n];\r\n    table_Validity = new bool [n];\r\n    matrix = new double *[n];\r\n    degrees = new int [n];\r\n        \r\n"],[0,"    for (int"]],"start1":1269,"start2":1269,"length1":24,"length2":186}]],"length":2355,"saved":false}
{"ts":1365082385989,"patch":[[{"diffs":[[0,"s(0)"],[-1,", \r\ntable_Distance(new double[n]),\r\ntable_Validity(new bool[n]), \r\nmatrix(new double *[n]),\r\ndegrees(new int[n])"],[0," {\r\n"]],"start1":1111,"start2":1111,"length1":120,"length2":8}]],"length":2243,"saved":false}
{"ts":1365082398763,"patch":[[{"diffs":[[0,"   }\r\n    \r\n"],[1,"    \r\n"],[0,"}\r\n\r\nWeighte"]],"start1":1476,"start2":1476,"length1":24,"length2":30}]],"length":2249,"saved":false}
{"ts":1365082434072,"patch":[[{"diffs":[[0,"\n    }\r\n"],[-1,"    \r\n    \r\n"],[0,"}\r\n\r\nWei"]],"start1":1474,"start2":1474,"length1":28,"length2":16}]],"length":2237,"saved":false}
{"ts":1365082498961,"patch":[[{"diffs":[[0,"    "],[-1,"}\r\n    \r\n    for (int i=0; i<n; i++) {\r\n        table_Validity = false"],[1,"    table_Distance[i] = INF"],[0,";\r\n "]],"start1":1398,"start2":1398,"length1":78,"length2":35}]],"length":2194,"saved":false}
{"ts":1365082539856,"patch":[[{"diffs":[[0,"[i] = INF;\r\n"],[1,"        for (int j=0; j<n; j++) {\r\n            matrix[i][j] = INF;\r\n        }\r\n"],[0,"    }\r\n}\r\n\r\n"]],"start1":1420,"start2":1420,"length1":24,"length2":103}]],"length":2273,"saved":false}
{"ts":1365082551754,"patch":[[{"diffs":[[0,"ance[i] = INF;\r\n"],[1,"        table_Validity[i] = false;\r\n"],[0,"        for (int"]],"start1":1416,"start2":1416,"length1":32,"length2":68}]],"length":2309,"saved":false}
{"ts":1365082595372,"patch":[[{"diffs":[[0,"  \r\n    "],[1,"table_Distance[m] = 0;\r\n    table_Validity[m] = truel"],[0,"\r\n}\r\n\r\n#"]],"start1":2288,"start2":2288,"length1":16,"length2":69}]],"length":2362,"saved":false}
{"ts":1365082596698,"patch":[[{"diffs":[[0,"] = true"],[-1,"l"],[1,";"],[0,"\r\n}\r\n\r\n#"]],"start1":2340,"start2":2340,"length1":17,"length2":17}]],"length":2362,"saved":false}
{"ts":1365082597866,"patch":[[{"diffs":[[0," true;\r\n"],[1,"    \r\n    \r\n"],[0,"}\r\n\r\n#en"]],"start1":2343,"start2":2343,"length1":16,"length2":28}]],"length":2374,"saved":false}
{"ts":1365082652588,"patch":[[{"diffs":[[0,"<vertice"],[1,"s"],[0,"; i++) {"]],"start1":1615,"start2":1615,"length1":16,"length2":17},{"diffs":[[0,"  \r\n    "],[1,"for (int i=0; i<vertices)"],[0,"\r\n}\r\n\r\n#"]],"start1":2354,"start2":2354,"length1":16,"length2":41}]],"length":2400,"saved":false}
{"ts":1365082660075,"patch":[[{"diffs":[[0,"vertices"],[-1,")"],[1,"; i++) {\r\n        \r\n    }"],[0,"\r\n}\r\n\r\n#"]],"start1":2378,"start2":2378,"length1":17,"length2":41}]],"length":2424,"saved":false}
{"ts":1365082808652,"patch":[[{"diffs":[[0," {\r\n        "],[1,"for (int j=0; j<vertices; j++) {\r\n            \r\n        }"],[0,"\r\n    }\r\n}\r\n"]],"start1":2392,"start2":2392,"length1":24,"length2":81}]],"length":2481,"saved":false}
{"ts":1365082859104,"patch":[[{"diffs":[[0,"t();\r\n    \r\n"],[1,"    int temp = 0;\r\n"],[0,"    table_Di"]],"start1":2281,"start2":2281,"length1":24,"length2":43}]],"length":2500,"saved":false}
{"ts":1365082865509,"patch":[[{"diffs":[[0,"int temp"],[-1," = 0"],[0,";\r\n    t"]],"start1":2297,"start2":2297,"length1":20,"length2":16}]],"length":2496,"saved":false}
{"ts":1365082885889,"patch":[[{"diffs":[[0,"int "],[-1,"temp"],[1,"smallest"],[0,";\r\n "]],"start1":2297,"start2":2297,"length1":12,"length2":16},{"diffs":[[0,"            "],[1,"if ()"],[0,"\r\n        }\r"]],"start1":2457,"start2":2457,"length1":24,"length2":29}]],"length":2505,"saved":false}
{"ts":1365082921454,"patch":[[{"diffs":[[0,"smallest"],[1," = m"],[0,";\r\n    t"]],"start1":2301,"start2":2301,"length1":16,"length2":20}]],"length":2509,"saved":false}
{"ts":1365082998397,"patch":[[{"diffs":[[0,"    if ("],[-1,")"],[1,"table_Distance[smallest] > table_Distance[j] || !table_Validity[j]) {\r\n                smallest = j;\r\n                table_Validity = true;\r\n            }"],[0,"\r\n      "]],"start1":2469,"start2":2469,"length1":17,"length2":171}]],"length":2663,"saved":false}
{"ts":1365083476860,"patch":[[{"diffs":[[0,"rtices; i++) {\r\n"],[1,"        \r\n        //finding vertices with smallest weight\r\n"],[0,"        for (int"]],"start1":2403,"start2":2403,"length1":32,"length2":91}]],"length":2722,"saved":false}
{"ts":1365083505535,"patch":[[{"diffs":[[0,"  }\r\n        }\r\n"],[1,"        \r\n        \r\n"],[0,"    }\r\n}\r\n\r\n#end"]],"start1":2688,"start2":2688,"length1":32,"length2":52}]],"length":2742,"saved":false}
{"ts":1365083525710,"patch":[[{"diffs":[[0,"  \r\n        "],[1,"for (int j=0; j<vertices; j++) {\r\n            \r\n        }"],[0,"\r\n    }\r\n}\r\n"]],"start1":2710,"start2":2710,"length1":24,"length2":81}]],"length":2799,"saved":false}
{"ts":1365083566140,"patch":[[{"diffs":[[0," {\r\n            "],[1,"if (matrix[i][j] != INF) {\r\n                table_Distance[j] = matrix[i][j];\r\n            }"],[0,"\r\n        }\r\n   "]],"start1":2752,"start2":2752,"length1":32,"length2":124}]],"length":2891,"saved":false}
{"ts":1365083619135,"patch":[[{"diffs":[[0,"] != INF"],[1," || "],[0,") {\r\n   "]],"start1":2783,"start2":2783,"length1":16,"length2":20},{"diffs":[[0,"nce[j] ="],[1," table_Distance[smallest] +"],[0," matrix["]],"start1":2827,"start2":2827,"length1":16,"length2":43}]],"length":2922,"saved":false}
{"ts":1365083758685,"patch":[[{"diffs":[[0,"  }\r\n        }\r\n"],[1,"        \r\n        if (table_Validity[n])\r\n            break;\r\n"],[0,"    }\r\n}\r\n\r\n#end"]],"start1":2888,"start2":2888,"length1":32,"length2":94}]],"length":2984,"saved":false}
{"ts":1365083768364,"patch":[[{"diffs":[[0,"   }\r\n        \r\n"],[1,"        //\r\n"],[0,"        for (int"]],"start1":2698,"start2":2698,"length1":32,"length2":44}]],"length":2996,"saved":false}
{"ts":1365083791728,"patch":[[{"diffs":[[0,"      //"],[1,"setting adjacent node's distance"],[0,"\r\n      "]],"start1":2716,"start2":2716,"length1":16,"length2":48}]],"length":3028,"saved":false}
{"ts":1365083834531,"patch":[[{"diffs":[[0,"   }\r\n        \r\n"],[1,"        //break if nth position is smallest\r\n"],[0,"        if (tabl"]],"start1":2942,"start2":2942,"length1":32,"length2":77}]],"length":3073,"saved":false}
{"ts":1365083901916,"patch":[[{"diffs":[[0,"ak;\r\n    }\r\n"],[1,"    \r\n    \r\n"],[0,"}\r\n\r\n#endif"]],"start1":3050,"start2":3050,"length1":23,"length2":35}]],"length":3085,"saved":false}
{"ts":1365083965568,"patch":[[{"diffs":[[0,"  \r\n    "],[1,"return table_Distance[n];"],[0,"\r\n}\r\n\r\n#"]],"start1":3064,"start2":3064,"length1":16,"length2":41}]],"length":3110,"saved":false}
{"ts":1365084052897,"patch":[[{"diffs":[[0,";\r\n}\r\n\r\n"],[1,"void Weighted_graph::insert(int m, int n, double w)\r\n\r\n"],[0,"#endif"]],"start1":3096,"start2":3096,"length1":14,"length2":69}]],"length":3165,"saved":false}
{"ts":1365084055006,"patch":[[{"diffs":[[0,"ouble w)"],[1," {\r\n    \r\n}"],[0,"\r\n\r\n#end"]],"start1":3147,"start2":3147,"length1":16,"length2":27}]],"length":3176,"saved":false}
{"ts":1365084716789,"patch":[[{"diffs":[[0,"ouble w) {\r\n"],[1,"    if (w <= 0 || m <= 0 || n <= 0 || m == n || m > vertices || n > vertices)\r\n        throw illegal_argument();\r\n    \r\n"],[0,"    \r\n}\r\n\r\n#"]],"start1":3147,"start2":3147,"length1":24,"length2":144}]],"length":3296,"saved":false}
{"ts":1365084894111,"patch":[[{"diffs":[[0,"t();\r\n    \r\n"],[1,"    for (int i=0; i<vertices; i++) {\r\n        table_Distance[i] = INF;\r\n        table_Validity[i] = false;\r\n    }\r\n    \r\n"],[0,"    int smal"]],"start1":2281,"start2":2281,"length1":24,"length2":145},{"diffs":[[0,"  \r\n    "],[1,"if ()"],[0,"\r\n}\r\n\r\n#"]],"start1":3396,"start2":3396,"length1":16,"length2":21}]],"length":3422,"saved":false}
{"ts":1365084935232,"patch":[[{"diffs":[[0,"    if ("],[-1,")"],[1,"matrix[m][n] == INF) {\r\n        \r\n    }"],[0,"\r\n}\r\n\r\n#"]],"start1":3400,"start2":3400,"length1":17,"length2":55}]],"length":3460,"saved":false}
{"ts":1365084964236,"patch":[[{"diffs":[[0," {\r\n        "],[1,"matrix[m][n] = w;\r\n        degree[m]++;\r\n        degree[n]++;"],[0,"\r\n    }\r\n}\r\n"]],"start1":3428,"start2":3428,"length1":24,"length2":85}]],"length":3521,"saved":false}
{"ts":1365084984308,"patch":[[{"diffs":[[0,"] = false;\r\n"],[1,"        degrees[i] = 0;\r\n"],[0,"        for "]],"start1":1456,"start2":1456,"length1":24,"length2":49}]],"length":3546,"saved":false}
{"ts":1365085002372,"patch":[[{"diffs":[[0,"gree[n]++;\r\n"],[1,"    } else {\r\n        matrix[m][n] = w;\r\n"],[0,"    }\r\n}\r\n\r\n"]],"start1":3516,"start2":3516,"length1":24,"length2":65}]],"length":3587,"saved":false}
{"ts":1365085713569,"patch":[[{"diffs":[[0," != INF "],[-1,"|| "],[1,"&& !table_Validity[j]"],[0,") {\r\n   "]],"start1":2974,"start2":2974,"length1":19,"length2":37}]],"length":3605,"saved":false}
{"ts":1365086157594,"patch":[[{"diffs":[[0,"able_Validity[j]"],[1," && \r\n                    table_Distance[j] < table_Distance[smallest] + matrix[i][j]"],[0,") {\r\n           "]],"start1":2987,"start2":2987,"length1":32,"length2":117}]],"length":3690,"saved":false}
